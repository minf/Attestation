<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="49:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b6c19e9ad90"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b6c19ccf618"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.0.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b6c19ccf618"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b6c19cdb878"/></to>
    </wire>
    <wire loc="51:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b6c19e8bdd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c1a0fa128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c1a0fa128"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c19f5c6a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6c19ea3760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c19f21020"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.0.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6c19f21020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c19f1d3e8"/></to>
    </wire>
    <wire loc="57:BlinkAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6c19ee6310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6c1aa2d888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x2b6c1aa2d888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6c1a10cc30"/></to>
    </wire>
    <wire loc="58:BlinkAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c19ef1a08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c1aa2c578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c1aa2c578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a1248e0"/></to>
    </wire>
    <wire loc="59:BlinkAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6c19f00810"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6c1aa2ec88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6c1aa2ec88"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6c1af5abe0"/></to>
    </wire>
    <wire loc="60:BlinkAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b6c19efb4e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a112dc0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a112dc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a11c020"/></to>
    </wire>
    <wire loc="64:BlinkAppC.nc">
      <from><interface-ref name="LPL" scoped="" ref="0x2b6c19f076d8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c1a126190"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c1a126190"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c1a997628"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19cdca30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a9485a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19cdca30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a929c08"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.0.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19cdca30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a90ce18"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19cdca30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a84fe50"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19cdca30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a7ac270"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19cdca30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a2d8e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19cdca30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1ae8a8a8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.0.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19cdca30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a5c8a38"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19cdca30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a22b9d0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.0.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19cdca30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c19f530c0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.0.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b6c19e78020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b6c19be85c8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.0.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b6c19be85c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b6c19c95788"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.0.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b6c19e789f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c19cda8e8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c19cda8e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c19cd7b80"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.0.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19e77140"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19cdca30"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.0.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b6c19cd8508"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a39edc0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c19ce1790"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c19e5c158"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b6c19cdea38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c19e5dae8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b6c19cde370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c19f3c2d8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b6c19cde370"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b6c19ce4250"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.0.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b6c19ce4250"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b6c19cf1850"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b6c19ce48e0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b6c19cd8508"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.0.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b6c19cf6a60"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b6c19cfa7e0"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b6c19cfa7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c19d83430"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.0.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b6c19cedc90"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b6c19ce48e0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b6c19d37348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c19e13970"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b6c19d1ae00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c19da9020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c19da9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab93970"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b6c19d1de00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c19db9d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c19db9d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac08970"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b6c19d2faf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c19dc95b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c19dc95b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac3c970"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b6c19d06af0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c19d80740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c19d80740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aa75710"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b6c19d237e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c19dcb2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c19dcb2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac42970"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b6c19d04e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c19d89930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c19d89930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aaf5970"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b6c19d13020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c19d97740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c19d97740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab1b970"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b6c19d16348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c19da6430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c19da6430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab8a970"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b6c19d27348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c19dc4120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c19dc4120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1abfe970"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b6c19cfd348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c19d76020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c19d76020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aa85710"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b6c19d00348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c19d85d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c19d85d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aaec970"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b6c19d104d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c19da4bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c19da4bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab57970"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b6c19d217e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c19db28c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c19db28c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1abc8970"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b6c19d2b020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c19dc6a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c19dc6a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac7e970"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b6c19d34c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c19e16020"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b6c19d1faf0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c19dbba50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c19dbba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac0e970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c19d83430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aa7b710"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b6c19d0b968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c19d91120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c19d91120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aae2970"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b6c19d36968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c19e0fab0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b6c19d08c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c19d99500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c19d99500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab21970"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b6c19d18020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c19da8120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c19da8120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab90970"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b6c19d29020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c19db7e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c19db7e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac05970"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b6c19d2ec78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c19dc8740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c19dc8740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac84970"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b6c19d05c78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c19d7f8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c19d7f8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aa72710"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b6c19d02020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c19d88a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c19d88a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aaf2970"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b6c19d121a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c19d968c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c19d968c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab5e970"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b6c19d154d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c19da55b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c19da55b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab87970"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b6c19d254d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c19dc32a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c19dc32a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1abfb970"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b6c19cfc4d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c19d75120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c19d75120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aa82710"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b6c19d0d4d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c19d94e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c19d94e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aae9970"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b6c19d0f658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c19da3d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c19da3d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab54970"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b6c19d2a1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c19dc5bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c19dc5bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac7a970"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b6c19d1b968"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c19dabe40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c19dabe40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab96970"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b6c19d1ec78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c19dbabd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c19dbabd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac0b970"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b6c19d30968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c19dca430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c19dca430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac3f970"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b6c19d33e00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c19e24180"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b6c19cf9968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c19d815b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c19d815b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aa78710"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b6c19d0aaf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c19d902a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c19d902a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aadf970"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b6c19d24658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c19dbd1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c19dbd1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac45970"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b6c19d07e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c19d985b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c19d985b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab1e970"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b6c19d171a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c19da72a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c19da72a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab8d970"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b6c19d281a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c19db5020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c19db5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac02970"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b6c19d2de00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c19dc78c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c19dc78c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac81970"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b6c19cfe1a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c19d78dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c19d78dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aa887e8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b6c19d011a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c19d86bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c19d86bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aaef970"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b6c19d11348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c19d95a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c19d95a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab5b970"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b6c19d22658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c19db4740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c19db4740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1abcb970"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b6c19d35af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c19e1cc38"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b6c19d20968"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c19dbc930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c19dbc930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ac11970"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b6c19d0e7e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c19da2e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c19da2e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1ab51970"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b6c19cfb658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c19d842a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c19d842a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aa7f710"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b6c19d0c7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c19d92020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c19d92020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c1aae5970"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.0.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19c94610"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.0.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b6c19c93aa0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b6c19cb42a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c19cba4b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c1a014168"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.0.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c19f3c2d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c19f20dd8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.0.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6c19f1cb60"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b6c19f1ed18"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6c19f1ed18"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b6c19cfc4d0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.0.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6c19f1bdf0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b6c19f3e020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6c19f3e020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b6c19cfd348"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.0.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6c19f2f020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b6c19f3d1b0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6c19f3d1b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b6c19cfe1a0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.0.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b6c19f5c6a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c19f53db8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.0.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b6c19f53db8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c1a0dd0c8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.0.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c19f530c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c19f648a8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.0.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b6c19f61298"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b6c1a0ec7f8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.0.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c19f648a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a0731f0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.0.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b6c1a0f55a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c1a09aab0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.0.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6c1a095c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b6c19f751c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.0.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b6c19f751c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c1a073998"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.0.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c1a0eb9d0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b6c19f6b3b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.0.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b6c19f6b3b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c1a06fa90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c1a06fa90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c1ad50738"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b6c1a0731f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1acfece8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6c1a073998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c1acfd4f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c1ad4ea28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c19ff8248"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c19ff8248"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c1a004020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c1ad49978"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c19ff3220"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c19ff3220"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c19fff020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b6c1ad48848"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c19ff2210"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b6c19ff2210"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c1a018020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b6c1ad448c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b6c1a0083c8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b6c1a0083c8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b6c1a014868"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b6c1a0adcf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b6c1a0f0618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a11c020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a996a90"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6c1a10fd80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6c1a11b020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6c1a11b020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6c1a13a020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b6c1a10c348"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b6c1a118050"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b6c1a118050"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b6c1a137050"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6c1a10cc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6c1a116020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6c1a116020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6c1a135020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6c1a10d4b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c1a1191c8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6c1a1191c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c1a1391c8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c1a11ea08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c1a133b30"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c1a133b30"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b6c1a8d4540"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a1248e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a118950"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a118950"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a137950"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a996a90"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b6c1a993d28"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b6c1a12d360"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b6c1a1be318"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b6c1a1be318"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b6c1a1b9648"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a133020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a8d88b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c1a997628"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c1a98e170"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b6c1a13c3d8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b6c1a9b6020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b6c1a9b6020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b6c1a9b22c8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b6c1a993d28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a1a2c58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a1a2c58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a1bd990"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6c1a14a330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c1a930a08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6c1a930a08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c1a929020"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6c1a92d838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c1a9b72a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.0.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6c1a9b72a0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b6c1a9b6d10"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6c1a9b6d10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c1a998020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6c1a998020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b6c1a994528"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6c1a994528"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c1a94ebb0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.0.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6c1a94ebb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b6c1a99dd38"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6c1a99dd38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c1a1c1770"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6c1a1c1770"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c1a1ba460"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b6c1a134020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c1a998c20"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6c1a998c20"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b6c1a993358"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b6c1a993358"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c1a950878"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6c1a950878"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c1a949240"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b6c1a94ddb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c1a95e8d0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.0.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6c1a95e8d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b6c1a99d3d8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b6c1a99d3d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c1a1bf478"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6c1a1bf478"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c1a8502f0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6c1a1567e8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6c1a7783a8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a134948"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a8d88b8"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a149080"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a8d3020"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b6c1a15a3f0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b6c1a230c98"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b6c1a230c98"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b6c1a248cf8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b6c1a8502f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b6c1a84b680"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a1c27d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a118950"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c1a1b25e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a230020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c1a230020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a248080"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b6c1a1cc6e0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b6c1a22e728"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b6c1a22e728"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b6c1a245728"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b6c1a1c9198"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b6c1a79b480"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b6c1a1c9198"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b6c1a851128"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b6c1a851128"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b6c1a84c4d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b6c1a79b480"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b6c1a7ac8b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b6c1a1c4da0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2b6c1a79bc30"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b6c1a79bc30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c1a7aa130"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b6c1a1d1b40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b6c1a798908"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b6c1a798908"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b6c1a7aada8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a1df4b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a8d88b8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a1de020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a8d3020"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b6c1a1c2020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b6c1a90fde0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.0.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b6c1a90fde0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b6c1a908898"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2b6c1a1d7540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6c1a912c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2b6c1a912c68"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6c1a5c91c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6c1a1e2d90"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c19f21020"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2b6c1a1d3bb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2b6c1a1d5d60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2b6c1a1d69a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2b6c1a229b00"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2b6c1a244af0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a24dba8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a118950"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2b6c1a242428"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b6c1a2d5820"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b6c1a2d5820"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c1a2d0e70"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b6c1a23e4f8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b6c1a4911a0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b6c1a4911a0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b6c19d04e00"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b6c1a23d688"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b6c1a48e648"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b6c1a48e648"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b6c19d06af0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b6c1a23c810"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2b6c1a48c958"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b6c1a48c958"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2b6c19cf9968"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b6c1a25ae80"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2b6c1a482bd8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b6c1a482bd8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b6c1a526930"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b6c1a24b3b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a747bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c1a747bf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a550348"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b6c1a24e098"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2b6c1a743638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2b6c1a743638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b6c1a24e770"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2b6c1a743c50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b6c1a743c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b6c1a24d578"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2b6c1a741020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b6c1a741020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6c1a24ee60"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6c1a741638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6c1a741638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b6c1a2514f0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2b6c1a7402e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b6c1a7402e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b6c1a251e60"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2b6c1a740b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b6c1a740b88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b6c1a257708"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2b6c1a73f470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b6c1a73f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6c1a254020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6c1a73fc10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6c1a73fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a2548a8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a73d470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a73d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b6c1a258020"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2b6c1a73bc10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2b6c1a73bc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b6c1a250148"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2b6c1a73c470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b6c1a73c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b6c1a2509a8"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2b6c1a73cc10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2b6c1a73cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2b6c1a26c140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a7306a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c1a7306a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a550348"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b6c1a24a3c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a755c30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c1a755c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a550348"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6c1a23a9e8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6c1a7783a8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2b6c1a263720"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2b6c1a2648d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.0.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c1a2d8e78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a496020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b6c1a496020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a46e020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6c1a2d0e70"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c1adc2ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6c1adc2ce0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c1adb5020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b6c1adaf450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c1adbb2d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6c1adbb2d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c1ada6750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c1adb11a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c1a3f6b88"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.0.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c1a3f6b88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c1a421878"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b6c1ada29c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c1a2e0b08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c1a2e0b08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c1a309458"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b6c1adf1a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c1a3103c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c1a2f6b88"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c1a304568"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b6c1a2ed628"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c1a303ca0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b6c1a3103c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b6c1a323540"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b6c1a3103c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b6c1a3208e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b6c1a3103c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b6c1a31cb88"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b6c1a317020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c19ff3220"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.0.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c1a39d540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c1a2e0b08"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.0.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b6c1a430b10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c1a3f0870"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.0.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c1a3f0870"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c1a4125a8"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.0.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c1a42a6f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c1a2e0b08"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b6c1a490338"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b6c19d0aaf0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b6c1a48f4c8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b6c19d27348"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b6c1a492060"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b6c19d22658"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b6c1a48d7c0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b6c19d16348"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b6c1a482020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c1a4a7020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b6c1a4ad898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b6c1a4bc2c8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x2b6c1a4a7bd8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c1a2ed628"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b6c1a4bcd78"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2b6c1a4cfb38"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2b6c1a4cfb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c1a535cd8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x2b6c1a523550"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b6c1a492060"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b6c1a4d4c88"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c1a51cc38"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2b6c1a4d1b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c1a50f180"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2b6c1a4ceb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c1a5309d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b6c1a4d3b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c1a5177a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2b6c1a4d0b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c1a50a020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b6c1a4d7db0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c1a503020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b6c1a4d2b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b6c1a5133e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a503de0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2b6c1a4c6480"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a51ba90"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2b6c1a4c6bb8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a5165f8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2b6c1a4c8408"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a5122e8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2b6c1a4c8b40"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a50e020"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2b6c1a4c7408"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a50ade0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2b6c1a4c7b40"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a534b10"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2b6c1a4c4408"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a52f908"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2b6c1a4c4b40"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x2b6c1a5200c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b6c1a742900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6c1a73ac10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b6c1a73dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a7468c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a54e020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a54e020"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a57ac90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6c1a745900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2b6c1a741c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b6c1a73a470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b6c1a739470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6c1a54d020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2b6c1a743020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b6c1a73b470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6c1a7452e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2b6c1a7422e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b6c1a7382e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6c1a54d020"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2b6c1a54d020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6c1a576cc8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a573020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a573d20"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c1a550348"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a577ac0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a572a60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2b6c1a568c80"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6c1a5cd1c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2b6c1a5cd1c8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6c1a5c91c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b6c1a5701c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a5de3f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c1a5de3f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a6097f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b6c1a56fc78"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b6c1a724020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b6c1a724020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b6c1a60a478"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b6c1a568468"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b6c1a7245f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b6c1a7245f8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b6c1a60aab0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6c1a56da40"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c19f21020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2b6c1a594910"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.0.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b6c1a5c91c8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6c1a5c5570"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b6c1a60aab0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b6c1a604bf8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b6c1a60a478"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b6c1a604600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b6c1a5dfde0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a60de28"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c1a60de28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a604020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c1a6097f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a603938"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b6c1a618208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a6f8b10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c1a6f8b10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1ae88be0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c1a6135d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c1a72c020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c1a72c020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c1ae86268"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b6c1a601020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b6c1a66d1a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b6c1a66d1a0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b6c1a66abb0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b6c1a613d78"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b6c19cb16d0"/></to>
    </wire>
    <wire loc="207:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b6c1a631830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b6c1a65d1a8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b6c19cb16d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b6c1a660a68"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b6c19d04e00"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b6c1a664c58"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b6c19d02020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b6c1a663df0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b6c19d011a0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b6c1a65e020"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b6c19d00348"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c1a6f7830"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c1ae879a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c1ae86b08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c1a72c8a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2b6c1ae842b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b6c1ae8ae80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b6c1ae84d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b6c1a75ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6c1a75f4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b6c1a7632e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6c1a75a470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b6c1a75e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2b6c1a75d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b6c1a760528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a72f430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a54e020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6c1a72e3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2b6c1a762638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6c1a762020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a75fc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b6c1a763900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b6c1a75cc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b6c1a75ac10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6c1a54d020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2b6c1a72e9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b6c1a760cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b6c1a762c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2b6c1a72d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2b6c1a75c470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b6c1a75dc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6c1a72fd58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2b6c1a72dc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b6c1a72d638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b6c1a759a90"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6c1a54d020"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b6c1a74b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6c1a74dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b6c1a751900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6c1a748c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b6c1a74cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2b6c1a74bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b6c1a74eb88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a7548c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a54e020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6c1a753900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2b6c1a74fc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6c1a74f638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a74c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b6c1a74f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b6c1a748470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b6c1a77f470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6c1a54d020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2b6c1a752020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b6c1a74d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b6c1a74e2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2b6c1a752638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2b6c1a749c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b6c1a749470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6c1a7532e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2b6c1a7512e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b6c1a752c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b6c1a77e2e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6c1a54d020"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2b6c1a795458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2b6c1a7a8d78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2b6c1a796cf0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2b6c1a7a8630"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x2b6c1a793770"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x2b6c1a7a9cf0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2b6c1a7a7718"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b6c1a2d5820"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b6c1a7a18b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b6c1a492060"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b6c1a7a0b10"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b6c1a4911a0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b6c1a79fe20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2b6c1a48d7c0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b6c1a7a2d50"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2b6c1a482020"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b6c1a7d5020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a82d958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c1a82d958"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a550348"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a7d5cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a8675b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a8675b8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a54e020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b6c1a7d2670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b6c1a866c50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2b6c1a866c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b6c1a7d2d40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2b6c1a864020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2b6c1a864020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b6c1a7d1478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2b6c1a864638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b6c1a864638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6c1a7d1b68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6c1a866638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6c1a866638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b6c1a7d3da8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b6c1a85f7c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b6c1a85f7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b6c1a7d4720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2b6c1a85ae58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b6c1a85ae58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6c1a54d020"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6c1a7d3538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6c1a85b7c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6c1a85b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a7d03d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a85f020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a85f020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b6c1a7ca0f0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b6c1a851910"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b6c1a851910"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b6c1a84ccc0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a7a3940"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a8d88b8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a7a24d8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a8d3020"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6c1a7cac08"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c19f21020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b6c1a85e020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6c1a860840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2b6c1a85e7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b6c1a8618c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2b6c1a862900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6c1a8622e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b6c1a864c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b6c1a85b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b6c1a85a020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6c1a54d020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b6c1a8600a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b6c1a861020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2b6c1a8652e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2b6c1a85d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b6c1a85d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6c1a866020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b6c1a865900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2b6c1a850d58"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2b6c1a84a158"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6c1a87b250"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c19f21020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b6c1a84a7f0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b6c1a4911a0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b6c1a885998"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2b6c1a490338"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b6c1a883b28"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2b6c1a48f4c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b6c1a882d40"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b6c1a4ad898"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b6c1a881900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a8d6c60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b6c1a8d6c60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b6c1a550348"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b6c1a8806a0"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2b6c1a8ee470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b6c1a8ee470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6c1a54d020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6c1a87fc10"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6c1a8f92e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6c1a8f92e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b6c1a87f520"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2b6c1a8f6c50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2b6c1a8f6c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a87e3a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a8d88b8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a87d020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a8d3020"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b6c1a87d800"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b6c1a230c98"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2b6c1a871020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b6c1a8f1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6c1a8f3c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b6c1a8f7900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6c1a8efc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b6c1a8f2c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2b6c1a8f1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b6c1a8f5b88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a8d58c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a54e020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6c1a8f9900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6c1a8f6638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a8f2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b6c1a8f6020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b6c1a8ef470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2b6c1a8f8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b6c1a8f3470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b6c1a8f52e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2b6c1a8f8638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2b6c1a8f0c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b6c1a8f0470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2b6c1a8f72e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b6c1a8f8c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b6c1a8ec2e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b6c1a54d020"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.0.2/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b6c1a908898"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b6c1a903288"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.0.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b6c1a90dd00"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b6c1a9096b0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.0.2/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b6c1a9096b0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b6c1a9041e8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.0.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c1a910020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a90ce18"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.0.2/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c1a90ce18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c1a907958"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b6c1a9283a0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b6c1a92d838"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b6c1a926020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6c1a92bc30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2b6c1a92bc30"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6c1a5c91c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b6c1a926da0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b6c1a90fde0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a9255e8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a8d3020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2b6c1a94d398"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2b6c1a949c18"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b6c1a948cb0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b6c1a94ddb0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a9476a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a8d3020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b6c1a995650"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6c1a990e38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2b6c1a990e38"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b6c1a5c91c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c1a9b1020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c1a11ea08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x2b6c1aa2bbd8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c1a11ea08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x2b6c1af598e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c1a9fa370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c1af58578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a1248e0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.0.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b6c1a9fa370"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b6c1aa3b8a8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.0.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b6c1aa3a6f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b6c1a10fd80"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.0.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b6c1aa393f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a1248e0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.0.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b6c1aa38a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b6c1a10cc30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x2b6c1aa37780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b6c1aa36020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.0.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.0.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.0.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformP.nc">
      <documentation loc="1:/opt/tinyos-2.0.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.0.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.0.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.0.2/tos/platforms/micaz/MotePlatformP.nc">
      <documentation loc="12:/opt/tinyos-2.0.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.0.2/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="14:/opt/tinyos-2.0.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.0.2/tos/system/RealMainP.nc">
      <documentation loc="38:/opt/tinyos-2.0.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.0.2/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.0.2/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="26:/opt/tinyos-2.0.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.8 2007/04/08 01:17:12 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="40:BlinkC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.0.2/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.0.2/tos/system/LedsP.nc">
      <documentation loc="24:/opt/tinyos-2.0.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.0.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="36(BlinkAppC.Timer0):/opt/tinyos-2.0.2/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.0.2/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.0.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.0.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.0.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b6c19f7a3b0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.0.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.0.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.0.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="24:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.8 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.8 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="51:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.0.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.0.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.0.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.0.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="TOne" ref="0x2b6c19c8de60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.0.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.0.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.0.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.0.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="TOne" ref="0x2b6c19c8de60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.0.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c19c53c10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c19c53c10"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2b6c19c8c650"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.0.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c19c53c10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="TOne" ref="0x2b6c19c8de60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.0.2/tos/system/NoInitC.nc">
      <documentation loc="10:/opt/tinyos-2.0.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="51:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.4 2006/12/12 18:23:44 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="28:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.0.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.0.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.5 2007/04/30 17:31:08 rincon Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="39:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.0.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.0.2/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.0.2/tos/system/StateImplP.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="53:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.6 2007/02/28 17:33:59 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="46:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.0.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.0.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.0.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.0.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.0.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.0.2/tos/system/ActiveMessageAddressC.nc">
      <documentation loc="34:/opt/tinyos-2.0.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="39:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.0.2/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.0.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos-2.0.2/tos/system/RandomMlcgC.nc">
      <documentation loc="22:/opt/tinyos-2.0.2/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator.</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos-2.0.2/tos/system/RandomMlcgP.nc">
      <documentation loc="21:/opt/tinyos-2.0.2/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.0.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.0.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplC" loc="39:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.0.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.0.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.0.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkAppC.AMSenderC" loc="39(BlinkAppC.AMSenderC):/opt/tinyos-2.0.2/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.AMSenderC.AMQueueEntryP" loc="35(BlinkAppC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.0.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.0.2/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.0.2/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b6c19d3a0c8" loc="31:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b6c19d3a410" loc="31:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b6c19d3a758" loc="31:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b6c19d4c948" loc="32:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b6c19d4ccb0" loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b6c19d49060" loc="34:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b6c19d49390" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b6c19dcd020" loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b6c19dcd388" loc="34:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b6c19dcd6f0" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b6c19dcda20" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.0.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b6c19f7a3b0" loc="23:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b6c19f7a3b0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b6c19f7a6a0" loc="23:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b6c19f89978" loc="23:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b6c19f89978"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b6c19f89c68" loc="23:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.0.2/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c19f5fc60" loc="35:/opt/tinyos-2.0.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c19f5fc60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.0.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c1a0abcc8" loc="35:/opt/tinyos-2.0.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c1a0abcc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b6c1a0a7020" loc="35:/opt/tinyos-2.0.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.0.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c1a0ed720" loc="35:/opt/tinyos-2.0.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c1a0ed720"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.0.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.0.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.0.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.0.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b6c1a39c1f8" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c1a39c1f8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b6c1a39c548" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b6c1a3a0750" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b6c1a3a0750"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b6c1a3b0020" loc="43:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c1a3b0020"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b6c1a3b0320" loc="44:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b6c1a414d38" loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b6c1a414d38"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b6c1a4114e8" loc="34:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c1a4114e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.0.2/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b6c1a420550" loc="44:/opt/tinyos-2.0.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b6c1a420550"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b6c1a420cb8" loc="45:/opt/tinyos-2.0.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b6c1a420cb8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b6c1a41f0a8" loc="46:/opt/tinyos-2.0.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b6c1a41f0a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b6c1a41f820" loc="47:/opt/tinyos-2.0.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b6c1a41f820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b6c1a41fbc8" loc="48:/opt/tinyos-2.0.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b6c1a41e380" loc="49:/opt/tinyos-2.0.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b6c1a41e380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.0.2/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b6c1a3f4c00" loc="41:/opt/tinyos-2.0.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b6c1a3f4c00"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b6c1a453398" loc="42:/opt/tinyos-2.0.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b6c1a453398"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b6c1a453760" loc="43:/opt/tinyos-2.0.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b6c1a453760"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b6c1a451020" loc="44:/opt/tinyos-2.0.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b6c1a451020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b6c1a4513c8" loc="45:/opt/tinyos-2.0.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.0.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="3:/opt/tinyos-2.0.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2b6c1a4c9de8" loc="30:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2b6c1a502198" loc="31:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2b6c1a502500" loc="32:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b6c1a502830" loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.0.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.0.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.0.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b6c1a6b3de8" loc="73:/opt/tinyos-2.0.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.0.2/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x2b6c1a6a9d08" loc="32:/opt/tinyos-2.0.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.0.2/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.0.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.0.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b6c1a9d54e0" loc="39:/opt/tinyos-2.0.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.0.2/tos/system/AMQueueEntryP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b6c1a9cc020" loc="35:/opt/tinyos-2.0.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.0.2/tos/system/AMQueueImplP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b6c1a9f8608" loc="37:/opt/tinyos-2.0.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b6c19cdca30" loc="47:/opt/tinyos-2.0.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19cdca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19cdcd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b6c19ccf618" loc="46:/opt/tinyos-2.0.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b6c19ccf618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6c19ccf968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b6c19cd8508" loc="43:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b6c19cd8508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19cd8858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c19cda8e8" loc="37:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c19cda8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19cdac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b6c19ce1790" loc="41:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c19ce1790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b6c19ce1ae0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b6c19ce1c68"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b6c19ce1df0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b6c19cd8020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b6c19cd81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b6c19cde370" loc="36:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b6c19cde370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19cde6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c19cd7b80" loc="35:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c19cd7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19cde020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b6c19cdea38" loc="37:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b6c19cdea38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19cded88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b6c19ce48e0" loc="18:/opt/tinyos-2.0.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b6c19ce48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19ce4c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b6c19ce4250" loc="17:/opt/tinyos-2.0.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6c19ce4250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19ce45a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b6c19cedc90" loc="22:/opt/tinyos-2.0.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b6c19cedc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19cec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b6c19cf6a60" loc="21:/opt/tinyos-2.0.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b6c19cf6a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19cf6db0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19ced020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19ced1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19ced330"/>
        <function-ref name="get" scoped="" ref="0x2b6c19ced4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19ced640"/>
        <function-ref name="set" scoped="" ref="0x2b6c19ced7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19ced950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b6c19cf1850" loc="20:/opt/tinyos-2.0.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6c19cf1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19cf1ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b6c19d37348" loc="91:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b6c19d37348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d37a98"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d37c20"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d37da8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d36020"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d36330"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d364b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d36640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b6c19d1ae00" loc="65:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b6c19d1ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d191a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d19330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d194b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d19640"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d197c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d19950"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d19ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d19c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b6c19d1de00" loc="76:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b6c19d1de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d1c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d1c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d1c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d1c640"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d1c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d1c950"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d1cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d1cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b6c19d2faf0" loc="85:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b6c19d2faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d2fe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d2e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d2e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d2e330"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d2e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d2e640"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d2e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d2e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b6c19d06af0" loc="43:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b6c19d06af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d06e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d05020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d051a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d05330"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d054b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d05640"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d057c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d05950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b6c19d237e0" loc="83:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b6c19d237e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d23b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d23cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d23e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d30020"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d301a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d30330"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d304b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d30640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b6c19d04e00" loc="46:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b6c19d04e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d031a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d03330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d034b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d03640"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d037c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d03950"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d03ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d03c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b6c19d13020" loc="57:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b6c19d13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d13370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d134f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d13680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d13808"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d13990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d13b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d13ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d13e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b6c19d16348" loc="68:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b6c19d16348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d16698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d16820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d169a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d16b30"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d16cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d16e40"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d15020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b6c19d27348" loc="79:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b6c19d27348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d27698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d27820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d279a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d27b30"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d27cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d27e40"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d25020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b6c19cfd348" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b6c19cfd348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19cfd698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19cfd820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19cfd9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19cfdb30"/>
        <function-ref name="get" scoped="" ref="0x2b6c19cfdcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19cfde40"/>
        <function-ref name="set" scoped="" ref="0x2b6c19cfc020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19cfc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b6c19d00348" loc="49:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b6c19d00348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d00698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d00820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d009a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d00b30"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d00cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d00e40"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d0d020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d0d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b6c19d104d0" loc="60:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b6c19d104d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d10820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d109a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d10b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d10cb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d10e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d0f020"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d0f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d0f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b6c19d217e0" loc="71:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b6c19d217e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d21b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d21cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d21e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d20020"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d20330"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d204b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d20640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b6c19d2b020" loc="88:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b6c19d2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d2b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d2b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d2b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d2b808"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d2b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d2bb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d2bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d2be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b6c19d34c78" loc="94:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b6c19d34c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d33020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d331a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d33330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d334b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d33640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d337c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d33950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d33ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b6c19d1faf0" loc="74:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b6c19d1faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d1fe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d1e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d1e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d1e330"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d1e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d1e640"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d1e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d1e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b6c19cfa7e0" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b6c19cfa7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19cfab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19cfacb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19cfae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19cf9020"/>
        <function-ref name="get" scoped="" ref="0x2b6c19cf91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19cf9330"/>
        <function-ref name="set" scoped="" ref="0x2b6c19cf94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19cf9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b6c19d0b968" loc="52:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b6c19d0b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d0bcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d0be40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d0a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d0a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d0a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d0a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d0a640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d0a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b6c19d36968" loc="92:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b6c19d36968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d36cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d36e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d35020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d351a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d35330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d354b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d35640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d357c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b6c19d08c78" loc="55:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b6c19d08c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d07020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d071a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d07330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d074b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d07640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d077c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d07950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d07ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b6c19d18020" loc="66:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b6c19d18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d18370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d184f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d18680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d18808"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d18990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d18b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d18ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d18e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b6c19d29020" loc="77:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b6c19d29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d29370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d294f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d29680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d29808"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d29990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d29b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d29ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d29e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b6c19d2ec78" loc="86:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b6c19d2ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d2d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d2d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d2d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d2d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d2d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d2d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d2d950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d2dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b6c19d05c78" loc="44:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b6c19d05c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d04020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d041a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d04330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d044b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d04640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d047c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d04950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d04ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b6c19d02020" loc="47:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b6c19d02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d02370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d024f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d02680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d02808"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d02990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d02b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d02ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d02e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b6c19d121a0" loc="58:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b6c19d121a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d124f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d12678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d12800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d12988"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d12b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d12c98"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d12e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b6c19d154d0" loc="69:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b6c19d154d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d15820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d159a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d15b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d15cb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d15e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d22020"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d221a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d22330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b6c19d254d0" loc="80:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b6c19d254d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d25820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d259a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d25b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d25cb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d25e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d24020"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d241a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d24330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b6c19cfc4d0" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b6c19cfc4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19cfc820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19cfc9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19cfcb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19cfccb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19cfce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19cfb020"/>
        <function-ref name="set" scoped="" ref="0x2b6c19cfb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19cfb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b6c19d0d4d0" loc="50:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b6c19d0d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d0d920"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d0daa8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d0dc30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d0ddb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d0c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d0c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d0c330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d0c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b6c19d0f658" loc="61:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b6c19d0f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d0f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d0fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d0fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d0fe40"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d0e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d0e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d0e330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d0e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b6c19d2a1a0" loc="89:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b6c19d2a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d2a4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d2a678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d2a800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d2a988"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d2ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d2ac98"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d2ae20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b6c19d1b968" loc="64:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b6c19d1b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d1a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d1a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d1a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d1a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d1a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d1a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d1a950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d1aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b6c19d1ec78" loc="75:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b6c19d1ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d1d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d1d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d1d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d1d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d1d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d1d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d1d950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d1dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b6c19d30968" loc="84:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b6c19d30968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d30cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d30e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d2f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d2f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d2f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d2f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d2f640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d2f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b6c19d33e00" loc="95:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b6c19d33e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d321a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d32330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d324b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d32640"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d327c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d32950"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d32ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d32c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b6c19cf9968" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b6c19cf9968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19cf9cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19cf9e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d06020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d061a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d06330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d064b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d06640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d067c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b6c19d0aaf0" loc="53:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b6c19d0aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d0ae40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d08020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d081a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d08330"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d084b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d08640"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d087c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d08950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b6c19d24658" loc="82:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b6c19d24658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d249a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d24b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d24cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d24e40"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d23020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d231a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d23330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d234b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b6c19d07e00" loc="56:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b6c19d07e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d141a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d14330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d144b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d14640"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d147c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d14950"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d14ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d14c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b6c19d171a0" loc="67:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b6c19d171a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d174f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d17678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d17800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d17988"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d17b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d17c98"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d17e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b6c19d281a0" loc="78:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b6c19d281a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d284f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d28678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d28800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d28988"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d28b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d28c98"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d28e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b6c19d2de00" loc="87:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b6c19d2de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d2c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d2c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d2c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d2c640"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d2c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d2c950"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d2cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d2cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b6c19cfe1a0" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b6c19cfe1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19cfe4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19cfe678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19cfe800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19cfe988"/>
        <function-ref name="get" scoped="" ref="0x2b6c19cfeb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19cfec98"/>
        <function-ref name="set" scoped="" ref="0x2b6c19cfee20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19cfd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b6c19d011a0" loc="48:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b6c19d011a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d014f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d01678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d01800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d01988"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d01b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d01c98"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d01e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b6c19d11348" loc="59:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b6c19d11348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d11698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d11820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d119a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d11b30"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d11cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d11e40"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d10020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b6c19d22658" loc="70:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b6c19d22658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d229a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d22b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d22cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d22e40"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d21020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d211a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d21330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d214b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b6c19d35af0" loc="93:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b6c19d35af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d35e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d34020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d341a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d34330"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d344b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d34640"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d347c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d34950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b6c19d20968" loc="73:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b6c19d20968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d20cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d20e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d1f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d1f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d1f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d1f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d1f640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d1f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b6c19d0e7e0" loc="62:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b6c19d0e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d0eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d0ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d0ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d1b020"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d1b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d1b330"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d1b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d1b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b6c19cfb658" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b6c19cfb658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19cfb9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19cfbb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19cfbcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19cfbe40"/>
        <function-ref name="get" scoped="" ref="0x2b6c19cfa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19cfa1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19cfa330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19cfa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b6c19d0c7e0" loc="51:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b6c19d0c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d0cb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d0ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d0ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d0b020"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d0b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d0b330"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d0b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d0b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c19d75120" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c19d75120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d75470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d755f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d75780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d75908"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d75a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d75c18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d75da0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c19d815b8" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c19d815b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d81908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d81a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d81c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d81da0"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d80020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d801a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d80330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d804b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c19d78dc0" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c19d78dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d77170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d772f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d77480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d77608"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d77790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d77918"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d77aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d77c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c19d842a8" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c19d842a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d845f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d84780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d84908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d84a90"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d84c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d84da0"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d83020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c19d80740" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c19d80740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d80a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d80c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d80da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d7f020"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d7f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d7f330"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d7f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d7f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c19d76020" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c19d76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d76370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d764f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d76680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d76808"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d76990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d76b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d76ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d76e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c19d83430" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c19d83430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d83780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d83908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d83a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d83c18"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d83da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d81020"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d811a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d81330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c19d7f8c8" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c19d7f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d7fc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d7fda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d7e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d7e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d7e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d7e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d7e640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d7e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aa887e8" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aa887e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aa88b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aa88cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aa88e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aa87020"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aa871a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aa87330"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aa874b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aa87640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aa85710" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aa85710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aa85a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aa85be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aa85d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aa84020"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aa841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aa84330"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aa844b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aa84640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aa82710" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aa82710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aa82a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aa82be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aa82d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aa81020"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aa811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aa81330"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aa814b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aa81640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aa7f710" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aa7f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aa7fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aa7fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aa7fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aa7d020"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aa7d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aa7d330"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aa7d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aa7d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aa7b710" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aa7b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aa7ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aa7bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aa7bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aa7a020"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aa7a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aa7a330"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aa7a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aa7a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aa78710" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aa78710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aa78a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aa78be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aa78d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aa77020"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aa771a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aa77330"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aa774b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aa77640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aa75710" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aa75710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aa75a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aa75be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aa75d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aa74020"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aa741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aa74330"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aa744b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aa74640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aa72710" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aa72710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aa72a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aa72be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aa72d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aa71020"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aa711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aa71330"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aa714b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aa71640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c19d86bd8" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c19d86bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d85020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d851a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d85330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d854b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d85640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d857c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d85950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d85ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c19d92020" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c19d92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d92370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d924f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d92680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d92808"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d92990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d92b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d92ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d92e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c19d89930" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c19d89930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d89c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d89e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d88020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d881a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d88330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d884b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d88640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d887c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c19d85d60" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c19d85d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d940d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d94260"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d943e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d94570"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d946f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d94880"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d94a08"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d94b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c19d91120" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c19d91120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d91470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d915f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d91780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d91908"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d91a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d91c18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d91da0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c19d88a50" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c19d88a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d88da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d86020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d861a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d86330"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d864b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d86640"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d867c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d86950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c19d94e18" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c19d94e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d931a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d93330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d934b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d93640"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d937c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d93950"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d93ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d93c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c19d902a8" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c19d902a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d905f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d90780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d90908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d90a90"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d90c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d90da0"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d8f020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d8f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aaf5970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aaf5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aaf5cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aaf5e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aaf4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aaf41a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aaf4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aaf44b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aaf4640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aaf47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aaf2970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aaf2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aaf2cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aaf2e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aaf1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aaf11a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aaf1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aaf14b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aaf1640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aaf17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aaef970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aaef970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aaefcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aaefe48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aaee020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aaee1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aaee330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aaee4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aaee640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aaee7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aaec970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aaec970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aaeccc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aaece48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aaeb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aaeb1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aaeb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aaeb4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aaeb640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aaeb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aae9970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aae9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aae9cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aae9e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aae7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aae71a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aae7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aae74b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aae7640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aae77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aae5970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aae5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aae5cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aae5e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aae4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aae41a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aae4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aae44b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aae4640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aae47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aae2970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aae2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aae2cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aae2e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aae1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aae11a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aae1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aae14b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aae1640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aae17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1aadf970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1aadf970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1aadfcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1aadfe48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1aade020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1aade1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1aade330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1aade4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1aade640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1aade7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c19d97740" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c19d97740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d97a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d97c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d97da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d96020"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d961a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d96330"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d964b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d96640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c19da4bd8" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c19da4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19da3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19da31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19da3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19da34b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19da3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19da37c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19da3950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19da3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c19d99500" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c19d99500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d99850"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d999d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d99b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d99ce8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d99e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d98020"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d981a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d98330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c19d968c8" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c19d968c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d96c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d96da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d95020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d951a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d95330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d954b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d95640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d957c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c19da3d60" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c19da3d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19da20d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19da2260"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19da23e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19da2570"/>
        <function-ref name="get" scoped="" ref="0x2b6c19da26f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19da2880"/>
        <function-ref name="set" scoped="" ref="0x2b6c19da2a08"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19da2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c19d985b8" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c19d985b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d98908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19d98a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19d98c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19d98da0"/>
        <function-ref name="get" scoped="" ref="0x2b6c19d97020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19d971a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19d97330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19d974b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c19d95a50" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c19d95a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19d95da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19da4020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19da41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19da4330"/>
        <function-ref name="get" scoped="" ref="0x2b6c19da44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19da4640"/>
        <function-ref name="set" scoped="" ref="0x2b6c19da47c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19da4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c19da2e18" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c19da2e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19da11a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19da1330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19da14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19da1640"/>
        <function-ref name="get" scoped="" ref="0x2b6c19da17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19da1950"/>
        <function-ref name="set" scoped="" ref="0x2b6c19da1ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19da1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab21970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab21970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab21cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab21e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab20020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab201a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab20330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab204b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab20640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab207c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab1e970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab1e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab1ecc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab1ee48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab1d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab1d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab1d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab1d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab1d640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab1d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab1b970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab1b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab1bcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab1be48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab1a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab1a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab1a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab1a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab1a640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab1a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab5e970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab5e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab5ecc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab5ee48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab5d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab5d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab5d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab5d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab5d640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab5d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab5b970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab5b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab5bcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab5be48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab59020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab591a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab59330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab594b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab59640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab597c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab57970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab57970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab57cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab57e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab56020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab561a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab56330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab564b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab56640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab567c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab54970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab54970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab54cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab54e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab53020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab531a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab53330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab534b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab53640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab537c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab51970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab51970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab51cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab51e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab50020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab501a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab50330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab504b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab50640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab507c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c19da8120" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c19da8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19da8470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19da85f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19da8780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19da8908"/>
        <function-ref name="get" scoped="" ref="0x2b6c19da8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19da8c18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19da8da0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19da7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c19da55b8" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c19da55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19da5908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19da5a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19da5c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19da5da0"/>
        <function-ref name="get" scoped="" ref="0x2b6c19db4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19db41a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19db4330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19db44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c19dabe40" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c19dabe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19daa1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19daa348"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19daa4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19daa658"/>
        <function-ref name="get" scoped="" ref="0x2b6c19daa7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19daa968"/>
        <function-ref name="set" scoped="" ref="0x2b6c19daaaf0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19daac78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c19da72a8" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c19da72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19da75f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19da7780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19da7908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19da7a90"/>
        <function-ref name="get" scoped="" ref="0x2b6c19da7c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19da7da0"/>
        <function-ref name="set" scoped="" ref="0x2b6c19da6020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19da61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c19db4740" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c19db4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19db4a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19db4c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19db4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19db2020"/>
        <function-ref name="get" scoped="" ref="0x2b6c19db21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19db2330"/>
        <function-ref name="set" scoped="" ref="0x2b6c19db24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19db2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c19da9020" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c19da9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19da9370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19da94f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19da9680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19da9808"/>
        <function-ref name="get" scoped="" ref="0x2b6c19da9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19da9b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19da9ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19da9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c19da6430" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c19da6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19da6780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19da6908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19da6a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19da6c18"/>
        <function-ref name="get" scoped="" ref="0x2b6c19da6da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19da5020"/>
        <function-ref name="set" scoped="" ref="0x2b6c19da51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19da5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c19db28c8" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c19db28c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19db2c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19db2da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19db1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19db11a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19db1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19db14b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19db1640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19db17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab96970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab96970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab96cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab96e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab95020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab951a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab95330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab954b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab95640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab957c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab93970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab93970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab93cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab93e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab92020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab921a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab92330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab924b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab92640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab927c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab90970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab90970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab90cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab90e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab8f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab8f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab8f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab8f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab8f640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab8f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab8d970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab8d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab8dcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab8de48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab8c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab8c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab8c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab8c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab8c640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab8c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab8a970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab8a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab8acc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab8ae48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab89020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab891a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab89330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab894b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab89640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab897c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ab87970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ab87970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ab87cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ab87e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ab85020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ab851a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ab85330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ab854b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ab85640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ab857c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1abcb970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1abcb970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1abcbcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1abcbe48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1abca020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1abca1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1abca330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1abca4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1abca640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1abca7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1abc8970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1abc8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1abc8cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1abc8e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1abc7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1abc71a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1abc7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1abc74b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1abc7640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1abc77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c19dbabd8" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c19dbabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19db9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19db91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19db9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19db94b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19db9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19db97c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19db9950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19db9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c19db5020" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c19db5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19db5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19db54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19db5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19db5808"/>
        <function-ref name="get" scoped="" ref="0x2b6c19db5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19db5b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19db5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19db5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c19dbc930" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c19dbc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dbcc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19dbce08"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19dbb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19dbb1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19dbb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19dbb4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dbb640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dbb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c19db9d60" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c19db9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19db70d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19db7260"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19db73e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19db7570"/>
        <function-ref name="get" scoped="" ref="0x2b6c19db76f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19db7880"/>
        <function-ref name="set" scoped="" ref="0x2b6c19db7a08"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19db7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c19dc4120" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c19dc4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dc4470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19dc45f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19dc4780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19dc4908"/>
        <function-ref name="get" scoped="" ref="0x2b6c19dc4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19dc4c18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dc4da0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c19dbba50" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c19dbba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dbbda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19dba020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19dba1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19dba330"/>
        <function-ref name="get" scoped="" ref="0x2b6c19dba4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19dba640"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dba7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dba950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c19db7e18" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c19db7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19db61a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19db6330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19db64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19db6640"/>
        <function-ref name="get" scoped="" ref="0x2b6c19db67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19db6950"/>
        <function-ref name="set" scoped="" ref="0x2b6c19db6ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19db6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c19dc32a8" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c19dc32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dc35f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19dc3780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19dc3908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19dc3a90"/>
        <function-ref name="get" scoped="" ref="0x2b6c19dc3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19dc3da0"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dc2020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dc21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac11970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac11970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac11cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac11e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac10020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac101a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac10330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac104b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac10640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac107c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac0e970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac0e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac0ecc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac0ee48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac0d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac0d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac0d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac0d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac0d640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac0d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac0b970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac0b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac0bcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac0be48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac0a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac0a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac0a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac0a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac0a640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac0a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac08970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac08970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac08cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac08e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac07020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac071a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac07330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac074b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac07640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac077c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac05970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac05970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac05cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac05e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac04020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac041a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac04330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac044b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac04640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac047c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac02970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac02970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac02cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac02e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac00020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac001a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac00330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac004b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac00640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac007c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1abfe970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1abfe970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1abfecc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1abfee48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1abfd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1abfd1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1abfd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1abfd4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1abfd640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1abfd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1abfb970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1abfb970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1abfbcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1abfbe48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1abfa020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1abfa1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1abfa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1abfa4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1abfa640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1abfa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c19dca430" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c19dca430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dca780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19dca908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19dcaa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19dcac18"/>
        <function-ref name="get" scoped="" ref="0x2b6c19dcada0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19dc9020"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dc91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dc9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c19dc78c8" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c19dc78c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dc7c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19dc7da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19dc6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19dc61a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19dc6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19dc64b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dc6640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dc67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c19dbd1e8" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c19dbd1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dbd538"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19dbd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19dbd848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19dbd9d0"/>
        <function-ref name="get" scoped="" ref="0x2b6c19dbdb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19dbdce0"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dbde68"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dcb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c19dc95b8" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c19dc95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dc9908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19dc9a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19dc9c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19dc9da0"/>
        <function-ref name="get" scoped="" ref="0x2b6c19dc8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19dc81a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dc8330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dc84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c19dc6a50" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c19dc6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dc6da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19dc5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19dc51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19dc5330"/>
        <function-ref name="get" scoped="" ref="0x2b6c19dc54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19dc5640"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dc57c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dc5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c19dcb2a8" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c19dcb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dcb5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19dcb780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19dcb908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19dcba90"/>
        <function-ref name="get" scoped="" ref="0x2b6c19dcbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19dcbda0"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dca020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c19dc8740" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c19dc8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dc8a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19dc8c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19dc8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19dc7020"/>
        <function-ref name="get" scoped="" ref="0x2b6c19dc71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19dc7330"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dc74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dc7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c19dc5bd8" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c19dc5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dd5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19dd51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19dd5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19dd54b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19dd5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19dd57c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dd5950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dd5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac45970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac45970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac45cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac45e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac44020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac441a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac44330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac444b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac44640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac447c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac42970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac42970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac42cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac42e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac41020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac411a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac41330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac414b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac41640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac417c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac3f970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac3f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac3fcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac3fe48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac3e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac3e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac3e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac3e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac3e640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac3e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac3c970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac3c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac3ccc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac3ce48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac3b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac3b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac3b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac3b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac3b640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac3b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac84970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac84970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac84cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac84e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac83020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac831a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac83330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac834b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac83640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac837c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac81970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac81970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac81cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac81e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac80020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac801a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac80330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac804b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac80640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac807c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac7e970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac7e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac7ecc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac7ee48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac7c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac7c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac7c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac7c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac7c640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac7c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c1ac7a970" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c1ac7a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1ac7acc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1ac7ae48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1ac79020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1ac791a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ac79330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1ac794b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ac79640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1ac797c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c19dcea70" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c19dcea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dcedc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19ddf020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19ddf1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19ddf330"/>
        <function-ref name="get" scoped="" ref="0x2b6c19ddf4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19ddf640"/>
        <function-ref name="set" scoped="" ref="0x2b6c19ddf7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19ddf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c19deedb8" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c19deedb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19ded170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19ded2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19ded480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19ded608"/>
        <function-ref name="get" scoped="" ref="0x2b6c19ded790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19ded918"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dedaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dedc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c19de83e0" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c19de83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19de8730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19de88b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19de8a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19de8bc8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19de8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19df9020"/>
        <function-ref name="set" scoped="" ref="0x2b6c19df91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19df9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c19df57e8" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c19df57e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19df5b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19df5cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19df5e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19df4020"/>
        <function-ref name="get" scoped="" ref="0x2b6c19df41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19df4330"/>
        <function-ref name="set" scoped="" ref="0x2b6c19df44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19df4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c19df1c38" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c19df1c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19e02020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19e021a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19e02330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19e024b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19e02640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19e027c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19e02950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19e02ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c19dfd020" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c19dfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19dfd370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19dfd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19dfd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19dfd808"/>
        <function-ref name="get" scoped="" ref="0x2b6c19dfd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19dfdb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19dfdca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19dfde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c19e0a480" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c19e0a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19e0a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19e0a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19e0aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19e0ac68"/>
        <function-ref name="get" scoped="" ref="0x2b6c19e0adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19e09020"/>
        <function-ref name="set" scoped="" ref="0x2b6c19e091a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19e09330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c19e067e8" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c19e067e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19e06b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19e06cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19e06e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19e05020"/>
        <function-ref name="get" scoped="" ref="0x2b6c19e051a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19e05330"/>
        <function-ref name="set" scoped="" ref="0x2b6c19e054b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19e05640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c19e13970" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c19e13970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19e13cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19e13e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19e12020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19e121a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19e12330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19e124b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19e12640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19e127c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c19e0fab0" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c19e0fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19e0fe00"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19e0d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19e0d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19e0d330"/>
        <function-ref name="get" scoped="" ref="0x2b6c19e0d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19e0d640"/>
        <function-ref name="set" scoped="" ref="0x2b6c19e0d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19e0d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c19e1cc38" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c19e1cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19e1b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19e1b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19e1b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19e1b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19e1b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19e1b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19e1b950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19e1bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c19e16020" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c19e16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19e16370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19e164f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19e16680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19e16808"/>
        <function-ref name="get" scoped="" ref="0x2b6c19e16990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19e16b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19e16ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19e16e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c19e24180" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c19e24180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19e244d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19e24658"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19e247e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19e24968"/>
        <function-ref name="get" scoped="" ref="0x2b6c19e24af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19e24c78"/>
        <function-ref name="set" scoped="" ref="0x2b6c19e24e00"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19e22020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c19e5dae8" loc="27:/opt/tinyos-2.0.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c19e5dae8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b6c19be30b8"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b6c19be30b8"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19e5de38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b6c19e5c158" loc="28:/opt/tinyos-2.0.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c19e5c158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b6c19e5c4a8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b6c19e5c630"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b6c19e5c7b8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b6c19e5c940"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b6c19e5cac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b6c19e77140" loc="49:/opt/tinyos-2.0.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c19e77140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19e77490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b6c19cdb878" loc="46:/opt/tinyos-2.0.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b6c19cdb878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6c19cdbbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b6c19e789f8" loc="48:/opt/tinyos-2.0.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6c19e789f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19e78d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b6c19e78020" loc="47:/opt/tinyos-2.0.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b6c19e78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19e78370"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6c19e784f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6c19e78680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b6c19bf5be8" loc="37:/opt/tinyos-2.0.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19bf5be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c19beb020"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c19beb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b6c19be85c8" loc="36:/opt/tinyos-2.0.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b6c19be85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19be8918"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6c19be8aa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6c19be8c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b6c19c94610" loc="45:/opt/tinyos-2.0.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b6c19c94610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c19c94960"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c19c94ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b6c19c93aa0" loc="46:/opt/tinyos-2.0.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b6c19c93aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b6c19c93df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b6c19c95788" loc="44:/opt/tinyos-2.0.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b6c19c95788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19c95ad8"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6c19c95c60"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6c19c95de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b6c19cba4b0" loc="46:/opt/tinyos-2.0.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c19cba4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b6c19cba800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b6c19cb42a0" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b6c19cb42a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b6c19cb45f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b6c19cb16d0" loc="43:/opt/tinyos-2.0.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b6c19cb16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b6c19cb1a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b6c19e8bdd0" loc="41:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b6c19e8bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c19e880c0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c19e7f798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c19e894d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c19e89088"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c19e88960"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c19e88510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c19e7fbe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c19e809e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c19e89aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c19e80e80"/>
        <function-ref name="stop" scoped="" ref="0x2b6c19e7f348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2b6c19efb4e8" loc="48:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2b6c19efb4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c19efb838"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c19efb9c0"/>
        <function-ref name="start" scoped="" ref="0x2b6c19efbb48"/>
        <function-ref name="stop" scoped="" ref="0x2b6c19efbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b6c19e9ad90" loc="43:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b6c19e9ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6c19e99170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b6c19ee6310" loc="45:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c19ee6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c19ee6660"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c19ee67e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c19ee6970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c19ee6af8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c19ee6c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b6c19f00810" loc="47:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c19f00810"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c19f00b60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c19f00ce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c19f00e70"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c19eef020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c19eef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LPL" ref="0x2b6c19f076d8" loc="50:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LPL" scoped="" ref="0x2b6c19f076d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x2b6c19f07a28"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x2b6c19f07bb0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x2b6c19f07d38"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x2b6c19efe020"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x2b6c19efe1a8"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x2b6c19efe330"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x2b6c19efe4b8"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x2b6c19efe640"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x2b6c19efe7c8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x2b6c19efe950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c19ea3760" loc="42:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c19ea3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c19ea3ab0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c19ea3c38"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c19ea3dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c19e9a020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c19e9a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19e9a330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c19e9a4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c19e9aad8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19e9a640"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c19e9a7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c19e9a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b6c19ef1a08" loc="46:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c19ef1a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c19ef1d58"/>
        <function-ref name="source" scoped="" ref="0x2b6c19ea1020"/>
        <function-ref name="address" scoped="" ref="0x2b6c19ea11a8"/>
        <function-ref name="destination" scoped="" ref="0x2b6c19ea1330"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c19ea14b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c19ea1640"/>
        <function-ref name="type" scoped="" ref="0x2b6c19ea17c8"/>
        <function-ref name="setType" scoped="" ref="0x2b6c19ea1950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c19ea1ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c19ea1c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c19ea1de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6c19f21020" loc="35:/opt/tinyos-2.0.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c19f21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c19f21370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c19f214f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c19f21680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c19f21808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c19f21990"/>
        <function-ref name="get" scoped="" ref="0x2b6c19f21b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c19f21ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c19f20330"/>
        <function-ref name="set" scoped="" ref="0x2b6c19f21e28"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c19f20020"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c19f201a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b6c19f1cb60" loc="39:/opt/tinyos-2.0.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b6c19f1cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19f1b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19f1b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19f1b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19f1b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c19f1b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19f1b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19f1b950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19f1bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c19f20dd8" loc="35:/opt/tinyos-2.0.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c19f20dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19f1d170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b6c19f1bdf0" loc="40:/opt/tinyos-2.0.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b6c19f1bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19f30170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19f302f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19f30480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19f30608"/>
        <function-ref name="get" scoped="" ref="0x2b6c19f30790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19f30918"/>
        <function-ref name="set" scoped="" ref="0x2b6c19f30aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19f30c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6c19f1d3e8" loc="36:/opt/tinyos-2.0.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c19f1d3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c19f1d738"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c19f1d8c0"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c19f1da48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c19f1dbd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c19f1dd58"/>
        <function-ref name="get" scoped="" ref="0x2b6c19f1c020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c19f1c1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c19f1c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19f1c330"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c19f1c4b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c19f1c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b6c19f2f020" loc="41:/opt/tinyos-2.0.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b6c19f2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19f2f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19f2f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19f2f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19f2f808"/>
        <function-ref name="get" scoped="" ref="0x2b6c19f2f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19f2fb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19f2fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19f2fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b6c19f1ed18" loc="35:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b6c19f1ed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19f3f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19f3f228"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19f3f3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19f3f538"/>
        <function-ref name="get" scoped="" ref="0x2b6c19f3f6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19f3f848"/>
        <function-ref name="set" scoped="" ref="0x2b6c19f3f9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19f3fb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b6c19f3e020" loc="36:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b6c19f3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19f3e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19f3e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19f3e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19f3e808"/>
        <function-ref name="get" scoped="" ref="0x2b6c19f3e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19f3eb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c19f3eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19f3ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b6c19f3c2d8" loc="38:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c19f3c2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19f3c628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b6c19f3d1b0" loc="37:/opt/tinyos-2.0.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b6c19f3d1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c19f3d500"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c19f3d688"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c19f3d810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c19f3d998"/>
        <function-ref name="get" scoped="" ref="0x2b6c19f3db20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c19f3dca8"/>
        <function-ref name="set" scoped="" ref="0x2b6c19f3de30"/>
        <function-ref name="clr" scoped="" ref="0x2b6c19f3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c1a0fa128" loc="37:/opt/tinyos-2.0.2/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c1a0fa128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1a1155f0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a0f9a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c1a0f88c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c1a0f8470"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c1a113020"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c1a115a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1a0f8020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c1a0fac70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c1a115020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c1a0f9158"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a0f95f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b6c19f5c6a0" loc="38:/opt/tinyos-2.0.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b6c19f5c6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c19f58a18"/>
        <function-ref name="fired" scoped="" ref="0x2b6c19f59158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c19f59e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c19f599f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c19f572e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c19f58e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c19f595a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c19f5b370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c19f58448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c19f5b810"/>
        <function-ref name="stop" scoped="" ref="0x2b6c19f5bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b6c19f53db8" loc="35:/opt/tinyos-2.0.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b6c19f53db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c19f66088"/>
        <function-ref name="fired" scoped="" ref="0x2b6c19f69708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c19f68470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c19f68020"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c19f66928"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c19f664d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c19f69b58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c19f6a930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c19f68a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c19f6add0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c19f692b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6c19f61298" loc="36:/opt/tinyos-2.0.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b6c19f61298"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c19f61e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c19f530c0" loc="34:/opt/tinyos-2.0.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c19f530c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19f53410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b6c19f6b3b8" loc="29:/opt/tinyos-2.0.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b6c19f6b3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c19f82130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c19f82a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c19f825b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c19f7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c19f648a8" loc="27:/opt/tinyos-2.0.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c19f648a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c19f64bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b6c19f751c8" loc="28:/opt/tinyos-2.0.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b6c19f751c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c19f6d918"/>
        <function-ref name="fired" scoped="" ref="0x2b6c19f74980"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c19f6d310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c19f74e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c19f6dda0"/>
        <function-ref name="start" scoped="" ref="0x2b6c19f74020"/>
        <function-ref name="stop" scoped="" ref="0x2b6c19f744f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c1a073998" loc="26:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c1a073998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1a06f020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a0700c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c1a0709d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1a070548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c1a06f4a8"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a071730"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a071c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a0731f0" loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a0731f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b6c19be4d18"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b6c19be4d18"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a073540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c1a06fa90" loc="27:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c1a06fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c1a06e828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c1a06c190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c1a06ecb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1a06c618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b6c1ad49978" loc="31:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c1ad49978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6c1ad49cc8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c1ad49e50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c1ad48020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c1ad481a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c1ad48330"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c1ad484b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c1acfd4f8" loc="26:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c1acfd4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1acfbc88"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1acfcd08"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c1acfb680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1acfb1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c1ad50150"/>
        <function-ref name="start" scoped="" ref="0x2b6c1acfc3a8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1acfc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1acfece8" loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1acfece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1acfd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c1ad50738" loc="27:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c1ad50738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c1ad4f578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c1ad4e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c1ad4fa00"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1ad4e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b6c1ad448c0" loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b6c1ad448c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b6c1ad44c10"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b6c1ad44d98"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b6c1ad43020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b6c1ad431a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b6c1ad43330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b6c1ad434b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b6c1ad48848" loc="32:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6c1ad48848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c1ad44020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1ad46d70"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ad46410"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1ad45230"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1ad444a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ad46898"/>
        <function-ref name="start" scoped="" ref="0x2b6c1ad456b8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1ad45b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c1ad4ea28" loc="30:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c1ad4ea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c1ad4ab80"/>
        <function-ref name="test" scoped="" ref="0x2b6c1ad4a270"/>
        <function-ref name="get" scoped="" ref="0x2b6c1ad4d5d8"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c1ad49088"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c1ad49560"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1ad4b4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1ad4b020"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1ad4a6f8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1ad4da60"/>
        <function-ref name="start" scoped="" ref="0x2b6c1ad4b930"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1ad4bdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b6c19ff3220" loc="48:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c19ff3220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6c19ff3570"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c19ff36f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c19ff3880"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c19ff3a08"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c19ff3b90"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c19ff3d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b6c1a0083c8" loc="50:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b6c1a0083c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b6c1a008718"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b6c1a0088a0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b6c1a008a28"/>
        <function-ref name="countBusy" scoped="" ref="0x2b6c1a008bb0"/>
        <function-ref name="getAssr" scoped="" ref="0x2b6c1a008d38"/>
        <function-ref name="setAssr" scoped="" ref="0x2b6c1a007020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c19ff2210" loc="49:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6c19ff2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c1a009998"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a00b748"/>
        <function-ref name="get" scoped="" ref="0x2b6c19ff2d90"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a00bbd0"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a009e20"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a00b270"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a009088"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a009510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c19ff8248" loc="47:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c19ff8248"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c19ff4310"/>
        <function-ref name="test" scoped="" ref="0x2b6c19ff69d0"/>
        <function-ref name="get" scoped="" ref="0x2b6c19ff8dc8"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c19ff4798"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c19ff4c70"/>
        <function-ref name="reset" scoped="" ref="0x2b6c19ff7c10"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c19ff7788"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c19ff6e58"/>
        <function-ref name="set" scoped="" ref="0x2b6c19ff72b0"/>
        <function-ref name="start" scoped="" ref="0x2b6c19ff60c0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c19ff6548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b6c19fff020" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c19fff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6c19fff370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c19fff4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c19fff680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c19fff808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c19fff990"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c19fffb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b6c1a014168" loc="43:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c1a014168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b6c1a0144b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b6c1a014868" loc="44:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b6c1a014868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b6c1a014bb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b6c1a014d40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b6c1a013020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b6c1a0131a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b6c1a013330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b6c1a0134b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c1a018020" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6c1a018020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c1a0157a8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a016560"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a018ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a0169e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a015c30"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a016088"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a016e70"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a015320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c1a004020" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c1a004020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c1a0000f8"/>
        <function-ref name="test" scoped="" ref="0x2b6c1a0017a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a004ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c1a000580"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c1a000a58"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a0039e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1a003560"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a001c30"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a003088"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a003e70"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a001320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b6c1a0adcf0" loc="63:/opt/tinyos-2.0.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b6c1a0adcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1a0ac0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1a0ac228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b6c1a095c70" loc="38:/opt/tinyos-2.0.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c1a095c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1a0ad410"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a0ae4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c1a0aedb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1a0ae930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c1a0ad898"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a0939f0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a0ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c1a09aab0" loc="37:/opt/tinyos-2.0.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c1a09aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1a096d60"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a097470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c1a0961c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c1a097d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c1a095648"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c1a0951f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1a0978c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c1a099620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c1a096790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c1a099ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a097020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b6c1a0f0618" loc="60:/opt/tinyos-2.0.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b6c1a0f0618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1a0f0968"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1a0f0af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b6c1a0f55a0" loc="38:/opt/tinyos-2.0.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b6c1a0f55a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1a0f18f0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a0f2020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c1a0f2d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c1a0f28c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c1a0f01c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c1a0f1d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1a0f2470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c1a0f3118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c1a0f1320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c1a0f35b8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a0f3a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c1a0dd0c8" loc="37:/opt/tinyos-2.0.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c1a0dd0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1a0f6610"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a0dba48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c1a0da900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c1a0da490"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c1a0f5020"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c1a0f6a80"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1a0da020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c1a0ddc30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c1a0f6020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c1a0db118"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a0db5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6c1a0ec7f8" loc="37:/opt/tinyos-2.0.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b6c1a0ec7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c1a0eb3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6c1a0eb9d0" loc="38:/opt/tinyos-2.0.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c1a0eb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c53150"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c19c534a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c1a100768"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c1a0ff0c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c1a100bf0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1a0ff548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6c1a112dc0" loc="49:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a112dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c1a10f170"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c1a10f2f8"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a10f480"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a10f608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6c1a10fd80" loc="51:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c1a10fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a10e170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a10e2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a10e480"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a10e608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a10e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b6c1a10c348" loc="53:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b6c1a10c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a10c698"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a10c820"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a10c9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6c1a10cc30" loc="55:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c1a10cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a124020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a1241a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a124330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a1244b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c1a124640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c1a10d4b8" loc="52:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c1a10d4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a10d808"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a10d990"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a10db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b6c1a11ea08" loc="57:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c1a11ea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6c1a11ed58"/>
        <function-ref name="noAck" scoped="" ref="0x2b6c1a121020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6c1a1211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6c1a1248e0" loc="56:/opt/tinyos-2.0.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a1248e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c1a124c30"/>
        <function-ref name="source" scoped="" ref="0x2b6c1a124db8"/>
        <function-ref name="address" scoped="" ref="0x2b6c1a123020"/>
        <function-ref name="destination" scoped="" ref="0x2b6c1a1231a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c1a123330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c1a1234b8"/>
        <function-ref name="type" scoped="" ref="0x2b6c1a123640"/>
        <function-ref name="setType" scoped="" ref="0x2b6c1a1237c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c1a123950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c1a123ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c1a123c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6c1a11c020" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a11c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c1a11c370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c1a11c4f8"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a11c680"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a11c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b6c1a12d360" loc="50:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b6c1a12d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6c1a12d6b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6c1a12d838"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6c1a12d9c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6c1a12db48"/>
        <function-ref name="setCca" scoped="" ref="0x2b6c1a12dcd0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6c1a12de58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6c1a11b020" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c1a11b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a11b370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a11b4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a11b680"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a11b808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a11b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b6c1a118050" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b6c1a118050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a1183a0"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a118528"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a1186b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6c1a116020" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c1a116020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a116370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a1164f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a116680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a116808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c1a116990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b6c1a133020" loc="48:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a133020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6c1a133370"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6c1a1334f8"/>
        <function-ref name="getPower" scoped="" ref="0x2b6c1a133680"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6c1a133808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b6c1a126190" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c1a126190"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x2b6c1a1264e0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x2b6c1a126668"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x2b6c1a1267f0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x2b6c1a126978"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x2b6c1a126b00"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x2b6c1a126c88"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x2b6c1a126e10"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x2b6c1a125020"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x2b6c1a1251a8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x2b6c1a125330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c1a1191c8" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c1a1191c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a119518"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a1196a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a119828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b6c1a133b30" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c1a133b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6c1a133e80"/>
        <function-ref name="noAck" scoped="" ref="0x2b6c1a132030"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6c1a1321b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b6c1a13c3d8" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b6c1a13c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b6c1a13c728"/>
        <function-ref name="setRetries" scoped="" ref="0x2b6c1a13c8b0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b6c1a13ca38"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b6c1a13cbc0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b6c1a13cd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6c1a118950" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a118950"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c1a118ca0"/>
        <function-ref name="source" scoped="" ref="0x2b6c1a118e28"/>
        <function-ref name="address" scoped="" ref="0x2b6c1a117020"/>
        <function-ref name="destination" scoped="" ref="0x2b6c1a1171a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c1a117330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c1a1174b8"/>
        <function-ref name="type" scoped="" ref="0x2b6c1a117640"/>
        <function-ref name="setType" scoped="" ref="0x2b6c1a1177c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c1a117950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c1a117ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c1a117c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6c1a14a330" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b6c1a14a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a14a680"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a14a808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a14a990"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a14ab18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a14aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b6c1a134020" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b6c1a134020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a134370"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a1344f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a134680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b6c1a15a3f0" loc="50:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b6c1a15a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b6c1a15a740"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b6c1a15a8c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b6c1a15aa50"/>
        <function-ref name="syncDone" scoped="" ref="0x2b6c1a15abd8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b6c1a15ad60"/>
        <function-ref name="setChannel" scoped="" ref="0x2b6c1a148020"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b6c1a1481a8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b6c1a148330"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b6c1a1484b8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b6c1a148640"/>
        <function-ref name="sync" scoped="" ref="0x2b6c1a1487c8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c1a148950"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b6c1a148ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6c1a13a020" loc="39:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c1a13a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a13a370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a13a4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a13a680"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a13a808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a13a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b6c1a137050" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b6c1a137050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a1373a0"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a137528"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a1376b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6c1a135020" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c1a135020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a135370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a1354f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a135680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a135808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c1a135990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b6c1a134948" loc="48:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a134948"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6c1a134c98"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6c1a134e20"/>
        <function-ref name="getPower" scoped="" ref="0x2b6c1a151020"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6c1a1511a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b6c1a149080" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a149080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b6c1a1493d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6c1a149558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c1a1391c8" loc="40:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c1a1391c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a139518"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a1396a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a139828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b6c1a1567e8" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6c1a1567e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b6c1a156b38"/>
        <function-ref name="changed" scoped="" ref="0x2b6c1a156cc0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b6c1a156e48"/>
        <function-ref name="setAddress" scoped="" ref="0x2b6c1a159020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6c1a137950" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a137950"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c1a137ca0"/>
        <function-ref name="source" scoped="" ref="0x2b6c1a137e28"/>
        <function-ref name="address" scoped="" ref="0x2b6c1a136020"/>
        <function-ref name="destination" scoped="" ref="0x2b6c1a1361a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c1a136330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c1a1364b8"/>
        <function-ref name="type" scoped="" ref="0x2b6c1a136640"/>
        <function-ref name="setType" scoped="" ref="0x2b6c1a1367c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c1a136950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c1a136ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c1a136c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6c1a1a2c58" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a1a2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c1a1c1020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c1a1c11a8"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a1c1330"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a1c14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b6c1a1be318" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b6c1a1be318"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6c1a1be668"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6c1a1be7f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6c1a1be978"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6c1a1beb00"/>
        <function-ref name="setCca" scoped="" ref="0x2b6c1a1bec88"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6c1a1bee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c1a1c1770" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c1a1c1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a1c1ac0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a1c1c48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a1c1dd0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a1bf020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a1bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c1a1bf478" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c1a1bf478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a1bf7c8"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a1bf950"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a1bfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6c1a1bd990" loc="39:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a1bd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c1a1bdce0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c1a1bde68"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a1ba020"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a1ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b6c1a1b9648" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b6c1a1b9648"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6c1a1b9998"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6c1a1b9b20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6c1a1b9ca8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6c1a1b9e30"/>
        <function-ref name="setCca" scoped="" ref="0x2b6c1a1b8020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6c1a1b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b6c1a1d1b40" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2b6c1a1d1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6c1a1cb020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6c1a1cb1a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6c1a1cb330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6c1a1cb4b8"/>
        <function-ref name="setCca" scoped="" ref="0x2b6c1a1cb640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6c1a1cb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b6c1a1df4b0" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a1df4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6c1a1df800"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6c1a1df988"/>
        <function-ref name="getPower" scoped="" ref="0x2b6c1a1dfb10"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6c1a1dfc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2b6c1a1c4da0" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b6c1a1c4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a1d1170"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a1d12f8"/>
        <function-ref name="modify" scoped="" ref="0x2b6c1a1d1480"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a1d1608"/>
        <function-ref name="resend" scoped="" ref="0x2b6c1a1d1790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c1a1ba460" loc="40:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c1a1ba460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a1ba7b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a1ba938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a1baac0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a1bac48"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a1badd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b6c1a1c2020" loc="48:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b6c1a1c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b6c1a1c2370"/>
        <function-ref name="rand32" scoped="" ref="0x2b6c1a1c24f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b6c1a1c9198" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b6c1a1c9198"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c1a1c94e8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a1c9670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b6c1a1de020" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a1de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b6c1a1de470"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6c1a1de5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2b6c1a1cc6e0" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b6c1a1cc6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b6c1a1cca30"/>
        <function-ref name="rfOff" scoped="" ref="0x2b6c1a1ccbb8"/>
        <function-ref name="rxOn" scoped="" ref="0x2b6c1a1ccd40"/>
        <function-ref name="startVReg" scoped="" ref="0x2b6c1a1b6020"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b6c1a1b61a8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b6c1a1b6330"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b6c1a1b64b8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b6c1a1b6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c1a1e2d90" loc="50:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c1a1e2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c1a1e0170"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c1a1e02f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c1a1e0480"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c1a1e0608"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c1a1e0790"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a1e0918"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c1a1e0aa0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c1a1df1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a1e0c28"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c1a1e0db0"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c1a1df020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b6c1a1b25e8" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a1b25e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a1b2938"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a1b2ac0"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a1b2c48"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a1b2dd0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a1b7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2b6c1a1d7540" loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x2b6c1a1d7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6c1a1d7890"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6c1a1d7a18"/>
        <function-ref name="isState" scoped="" ref="0x2b6c1a1d7ba0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6c1a1d7d28"/>
        <function-ref name="requestState" scoped="" ref="0x2b6c1a1dd020"/>
        <function-ref name="forceState" scoped="" ref="0x2b6c1a1dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b6c1a1c27d8" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a1c27d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c1a1c2b28"/>
        <function-ref name="source" scoped="" ref="0x2b6c1a1c2cb0"/>
        <function-ref name="address" scoped="" ref="0x2b6c1a1c2e38"/>
        <function-ref name="destination" scoped="" ref="0x2b6c1a1e2020"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c1a1e21a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c1a1e2330"/>
        <function-ref name="type" scoped="" ref="0x2b6c1a1e24b8"/>
        <function-ref name="setType" scoped="" ref="0x2b6c1a1e2640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c1a1e27c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c1a1e2950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c1a1e2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2b6c1a1d3bb8" loc="78:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x2b6c1a1d3bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1a1d2020"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1a1d21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2b6c1a1d5d60" loc="77:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x2b6c1a1d5d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1a1d30d8"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1a1d3260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2b6c1a1d69a0" loc="75:/opt/tinyos-2.0.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x2b6c1a1d69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1a1d6cf0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1a1d6e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b6c1a230c98" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b6c1a230c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b6c1a22f020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b6c1a22f1a8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b6c1a22f330"/>
        <function-ref name="syncDone" scoped="" ref="0x2b6c1a22f4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b6c1a22f640"/>
        <function-ref name="setChannel" scoped="" ref="0x2b6c1a22f7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b6c1a22f950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b6c1a22fad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b6c1a22fc60"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b6c1a22fde8"/>
        <function-ref name="sync" scoped="" ref="0x2b6c1a22e020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c1a22e1a8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b6c1a22e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b6c1a229b00" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2b6c1a229b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a22c670"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a22cac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b6c1a22e728" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b6c1a22e728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b6c1a22ea78"/>
        <function-ref name="rfOff" scoped="" ref="0x2b6c1a22ec00"/>
        <function-ref name="rxOn" scoped="" ref="0x2b6c1a22ed88"/>
        <function-ref name="startVReg" scoped="" ref="0x2b6c1a22d020"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b6c1a22d1a8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b6c1a22d330"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b6c1a22d4b8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b6c1a22d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1a230020" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a230020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a230370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a2304f8"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a230680"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a230808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a230990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b6c1a248cf8" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b6c1a248cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b6c1a2460a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b6c1a246228"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b6c1a2463b0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b6c1a246538"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b6c1a2466c0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b6c1a246848"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b6c1a2469d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b6c1a246b58"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b6c1a246ce0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b6c1a246e68"/>
        <function-ref name="sync" scoped="" ref="0x2b6c1a245020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c1a2451a8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b6c1a245330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2b6c1a250148" loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b6c1a250148"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a250498"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a250620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2b6c1a242428" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x2b6c1a242428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c19c53c10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1a240ab0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a241b30"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c1a2404a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1a240020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c1a23e020"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a2411d0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a2416a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2b6c1a254020" loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6c1a254020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a254370"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a2544f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b6c1a23d688" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b6c1a23d688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a23d9d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a23db60"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a23dce8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a23de70"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a23c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a23c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a23c330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a23c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b6c1a244af0" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2b6c1a244af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a243670"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a243ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2b6c1a263720" loc="113:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x2b6c1a263720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1a263a70"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1a263bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2b6c1a2509a8" loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b6c1a2509a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a250cf8"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a250e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2b6c1a251e60" loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b6c1a251e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a2571e8"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a257370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b6c1a23a9e8" loc="54:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6c1a23a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b6c1a23ad38"/>
        <function-ref name="changed" scoped="" ref="0x2b6c1a239020"/>
        <function-ref name="amGroup" scoped="" ref="0x2b6c1a2391a8"/>
        <function-ref name="setAddress" scoped="" ref="0x2b6c1a239330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b6c1a23e4f8" loc="50:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b6c1a23e4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a23e848"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a23e9d0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a23eb58"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a23ece0"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a23ee68"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a23d020"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a23d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a23d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2b6c1a24ee60" loc="66:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6c1a24ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a24d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2b6c1a23c810" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2b6c1a23c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a23cb60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a23cce8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a23ce70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a23b020"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a23b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a23b330"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a23b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a23b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a22b9d0" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a22b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a22bd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b6c1a2548a8" loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a2548a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a254bf8"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a254d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2b6c1a24d578" loc="67:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b6c1a24d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a24d8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b6c1a24b3b0" loc="70:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b6c1a24b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a24b900"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a24ba88"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a24bc10"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a24bd98"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a24a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2b6c1a26c140" loc="72:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x2b6c1a26c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a26c490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a26c618"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a26c7a0"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a26c928"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a26cab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b6c1a245728" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b6c1a245728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b6c1a245a78"/>
        <function-ref name="rfOff" scoped="" ref="0x2b6c1a245c00"/>
        <function-ref name="rxOn" scoped="" ref="0x2b6c1a245d88"/>
        <function-ref name="startVReg" scoped="" ref="0x2b6c1a244020"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b6c1a2441a8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b6c1a244330"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b6c1a2444b8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b6c1a244640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2b6c1a257708" loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b6c1a257708"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a257a58"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a257be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2b6c1a2514f0" loc="57:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b6c1a2514f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a251940"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a251ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2b6c1a24e098" loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b6c1a24e098"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a24e3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c1a26cd68" loc="74:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c1a26cd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c1a26b0f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c1a26b278"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c1a26b400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c1a26b588"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c1a26b710"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a26b898"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c1a26ba20"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c1a26a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a26bba8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c1a26bd30"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c1a26a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2b6c1a2648d8" loc="112:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x2b6c1a2648d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1a264c28"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1a264db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1a248080" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a248080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a2483d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a248558"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a2486e0"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a248868"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a2489f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2b6c1a258020" loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b6c1a258020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a258370"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a2584f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2b6c1a25ae80" loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2b6c1a25ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a23a1f8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a23a380"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c1a23a508"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c1a23a690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b6c1a24dba8" loc="68:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c1a24dba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c1a24c020"/>
        <function-ref name="source" scoped="" ref="0x2b6c1a24c1a8"/>
        <function-ref name="address" scoped="" ref="0x2b6c1a24c330"/>
        <function-ref name="destination" scoped="" ref="0x2b6c1a24c4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c1a24c640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c1a24c7c8"/>
        <function-ref name="type" scoped="" ref="0x2b6c1a24c950"/>
        <function-ref name="setType" scoped="" ref="0x2b6c1a24cad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c1a24cc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c1a24cde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c1a24b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2b6c1a24a3c0" loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2b6c1a24a3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a24a710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a24a898"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a24aa20"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a24aba8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a24ad30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2b6c1a24e770" loc="65:/opt/tinyos-2.0.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b6c1a24e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a24eac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a2d8e78" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a2d8e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a2d51f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b6c1a2d5820" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b6c1a2d5820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c19c53c10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1a2d2020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a2d3020"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c1a2d3930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1a2d34a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c1a2d24a8"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a2d4598"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a2d4a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c1a2d0e70" loc="67:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c1a2d0e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c19c53c10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1a497628"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a46f580"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c1a497020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1a46fa08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c1a497ab0"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a2cfbe8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a46f0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a496020" loc="68:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a496020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a496370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c1adc2ce0" loc="28:/opt/tinyos-2.0.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c1adc2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c19c53c10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1adbe410"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1adc04a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c1adc0db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1adc0930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c1adbe898"/>
        <function-ref name="start" scoped="" ref="0x2b6c1adc1ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1adc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c1adbb2d0" loc="30:/opt/tinyos-2.0.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c1adbb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="TOne" ref="0x2b6c19c8de60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1adb8928"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1adba9e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c1adb8320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1adbae70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c1adb8db0"/>
        <function-ref name="start" scoped="" ref="0x2b6c1adba088"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1adba560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b6c1a2f6b88" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c1a2f6b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c1a2fe020"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b6c1a2fe1a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c1a2fe330"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b6c1a2fe4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c1a2fe640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c1a2fe7c8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b6c1a2fe950"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b6c1a2fead8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b6c1a2fec60"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b6c1a2fede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c1a2ed628" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b6c1a2ed628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b6c1a311798"/>
        <function-ref name="test" scoped="" ref="0x2b6c1a2f3e20"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a2f41d0"/>
        <function-ref name="captured" scoped="" ref="0x2b6c1a2f4b30"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a2f3088"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a311310"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a2f4658"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a2f3510"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a2f3998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c1a3103c8" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6c1a3103c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c1a30dc20"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a30f980"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a30f020"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a30fe08"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a30c0f8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a30f4a8"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a30d310"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a30d798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c1a2e0b08" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c1a2e0b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c1a2dac20"/>
        <function-ref name="test" scoped="" ref="0x2b6c1a2da310"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a2dd728"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c1a2ff0f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c1a2ff5d0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a2dc548"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1a2dc0c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a2da798"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a2ddbb0"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a2dc9d0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a2dce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b6c1a304568" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c1a304568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c1a3048b8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b6c1a304a40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c1a304bc8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b6c1a304d50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c1a303020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c1a3031a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b6c1a303330"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b6c1a3034b8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b6c1a303640"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b6c1a3037c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2b6c1a317020" loc="44:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b6c1a317020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6c1a317370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c1a3174f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c1a317680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c1a317808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c1a317990"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c1a317b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b6c1a323540" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b6c1a323540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c1a321db8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a322a58"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a3220f8"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a321020"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a320270"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a322580"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a3214a8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a321930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c1a303ca0" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b6c1a303ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b6c1a325e20"/>
        <function-ref name="test" scoped="" ref="0x2b6c1a325510"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a301858"/>
        <function-ref name="captured" scoped="" ref="0x2b6c1a300238"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a300710"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a325998"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a301ce0"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a300b98"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a325088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b6c1a3208e8" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b6c1a3208e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c1a31c088"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a31edf0"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a31e490"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a31d2b0"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a31c510"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a31e918"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a31d738"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a31dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b6c1a31cb88" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b6c1a31cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c1a3184a8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a3190f8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a31b760"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a319580"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a318930"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a31bbe8"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a319a08"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a318020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c1a309458" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c1a309458"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c1a305580"/>
        <function-ref name="test" scoped="" ref="0x2b6c1a306c20"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a308020"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c1a305a08"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c1a304020"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a308e08"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1a308980"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a3050f8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a3084a8"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a306310"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a306798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a39edc0" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a39edc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b6c19be4d18"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b6c19be4d18"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a39d170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c1a39d540" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c1a39d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c1a3b66f8"/>
        <function-ref name="test" scoped="" ref="0x2b6c1a3b7db8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a3b80f8"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c1a3b6b80"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c1a3b5088"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a3b7020"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1a3b8a58"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a3b6270"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a3b8580"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a3b74a8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a3b7930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c1ada6750" loc="46:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c1ada6750"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b6c19be49b0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b6c19be49b0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="TOne" ref="0x2b6c19c8de60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1ada2020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1ada3020"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c1ada3930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1ada34a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c1ada24a8"/>
        <function-ref name="start" scoped="" ref="0x2b6c1ada4578"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1ada4a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b6c1adf1a80" loc="49:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b6c1adf1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c1aded270"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1adef020"/>
        <function-ref name="get" scoped="" ref="0x2b6c1adf0658"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1adef4a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1aded6f8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1adf0ae0"/>
        <function-ref name="start" scoped="" ref="0x2b6c1adef930"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1adefdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b6c1ada29c8" loc="48:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b6c1ada29c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c1adf2b80"/>
        <function-ref name="test" scoped="" ref="0x2b6c1adf2270"/>
        <function-ref name="get" scoped="" ref="0x2b6c1adf5598"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c1adf1088"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c1adf1560"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1adf44a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1adf4020"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1adf26f8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1adf5a20"/>
        <function-ref name="start" scoped="" ref="0x2b6c1adf4930"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1adf4db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c1a3f6b88" loc="24:/opt/tinyos-2.0.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c1a3f6b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c19c53c10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c1a3f3930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c1a3f1270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c1a3f3db8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1a3f16f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c1a3f0870" loc="24:/opt/tinyos-2.0.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c1a3f0870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="TOne" ref="0x2b6c19c8de60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c1a3ed660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c1a416020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c1a3edae8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1a4164a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c1a4125a8" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c1a4125a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="TOne" ref="0x2b6c19c8de60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c1a4023a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c1a402cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c1a402830"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1a42a190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c1a42a6f0" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c1a42a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c1a426930"/>
        <function-ref name="test" scoped="" ref="0x2b6c1a426020"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a4293a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c1a426db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c1a4252f0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a4281f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1a429d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a4264a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a429830"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a428680"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a428b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b6c1a430b10" loc="52:/opt/tinyos-2.0.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b6c1a430b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c19c53c10"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c1a42f8f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c1a42d230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c1a42fd80"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1a42d6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c1a421878" loc="51:/opt/tinyos-2.0.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c1a421878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c19c53c10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c1a431660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c1a430020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c1a431ae8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1a4304a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c1adb5020" loc="50:/opt/tinyos-2.0.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c1adb5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c19c53c10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1adb3690"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1adb46f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c1adb3088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1adb4b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c1adb3b18"/>
        <function-ref name="start" scoped="" ref="0x2b6c1adb5d70"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1adb4270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b6c1adaf450" loc="62:/opt/tinyos-2.0.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2b6c1adaf450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="TOne" ref="0x2b6c19c8de60"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1adacab0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1adaeb30"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c1adac4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1adac020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c1adab020"/>
        <function-ref name="start" scoped="" ref="0x2b6c1adae1d0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1adae6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6c1adb11a8" loc="57:/opt/tinyos-2.0.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c1adb11a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c19c53c10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c1adb0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c1adb0930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c1adb04a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c1adb0db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a46e020" loc="18:/opt/tinyos-2.0.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a46e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a46e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2b6c1a490338" loc="68:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2b6c1a490338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a490688"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a490810"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a490998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a490b20"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a490ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a490e30"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a48f020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a48f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2b6c1a48f4c8" loc="69:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2b6c1a48f4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a48f818"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a48f9a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a48fb28"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a48fcb0"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a48fe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a48e020"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a48e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a48e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b6c1a48e648" loc="70:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b6c1a48e648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a48e998"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a48eb20"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a48eca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a48ee30"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a48d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a48d1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a48d330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a48d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2b6c1a4911a0" loc="67:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b6c1a4911a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a4914f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a491678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a491800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a491988"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a491b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a491c98"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a491e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a490020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2b6c1a48c958" loc="72:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2b6c1a48c958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a48cca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a48ce30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a48b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a48b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a48b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a48b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a48b640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a48b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b6c1a492060" loc="66:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b6c1a492060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a4923b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a492538"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a4926c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a492848"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a4929d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a492b58"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a492ce0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a492e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2b6c1a48d7c0" loc="71:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2b6c1a48d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a48db10"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a48dc98"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a48de20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a48c020"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a48c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a48c330"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a48c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a48c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2b6c1a482020" loc="39:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2b6c1a482020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b6c1a482370"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4824f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c1a482680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b6c1a482808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2b6c1a482bd8" loc="40:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2b6c1a482bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4ad020"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4ad1a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c1a4ad330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c1a4ad4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2b6c1a4ad898" loc="41:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b6c1a4ad898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4adbe8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4add70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c1a4a9020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c1a4a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c1a4a7020" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b6c1a4a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b6c1a4a7370"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4a74f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c1a4a7680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b6c1a4a7808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x2b6c1a4a7bd8" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x2b6c1a4a7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b6c1a4c1db8"/>
        <function-ref name="test" scoped="" ref="0x2b6c1a4c14a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a4c37a0"/>
        <function-ref name="captured" scoped="" ref="0x2b6c1a4c2130"/>
        <function-ref name="reset" scoped="" ref="0x2b6c1a4c2608"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c1a4c1930"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a4c3c28"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a4c2a90"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a4c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b6c1a4bcd78" loc="9:/opt/tinyos-2.0.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b6c1a4bcd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a4d80f0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4d8278"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4d8400"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a4d8588"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a4d8710"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a4d8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b6c1a4bc2c8" loc="8:/opt/tinyos-2.0.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b6c1a4bc2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4bc618"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4bc7a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c1a4bc928"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c1a4bcab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2b6c1a4cfb38" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2b6c1a4cfb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a4ce020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4ce1a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4ce330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a4ce4b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a4ce640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a4ce7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b6c1a4d4c88" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b6c1a4d4c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a4d3020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4d31a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4d3330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a4d34b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a4d3640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a4d37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2b6c1a4d1b38" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2b6c1a4d1b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a4d0020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4d01a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4d0330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a4d04b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a4d0640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a4d07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2b6c1a4ceb38" loc="43:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2b6c1a4ceb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a4cd020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4cd1a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4cd330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a4cd4b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a4cd640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a4cd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b6c1a4d3b38" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b6c1a4d3b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a4d2020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4d21a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4d2330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a4d24b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a4d2640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a4d27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2b6c1a4d0b38" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2b6c1a4d0b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a4cf020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4cf1a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4cf330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a4cf4b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a4cf640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a4cf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b6c1a4d7db0" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b6c1a4d7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a4d4170"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4d42f8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4d4480"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a4d4608"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a4d4790"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a4d4918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b6c1a4d2b38" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b6c1a4d2b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a4d1020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4d11a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a4d1330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a4d14b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a4d1640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a4d17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2b6c1a4c4408" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2b6c1a4c4408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4c4758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2b6c1a4c6bb8" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2b6c1a4c6bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2b6c1a4c7408" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2b6c1a4c7408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4c7758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2b6c1a4c4b40" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2b6c1a4c4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2b6c1a4c8408" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2b6c1a4c8408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4c8758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2b6c1a4c7b40" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2b6c1a4c7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2b6c1a4c6480" loc="34:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2b6c1a4c6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4c67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2b6c1a4c8b40" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2b6c1a4c8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a4c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c1a503020" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c1a503020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a503370"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a5034f8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a503680"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a503808"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a503990"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a503b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c1a503de0" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a503de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a51e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c1a51cc38" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c1a51cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a51b020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a51b1a8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a51b330"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a51b4b8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a51b640"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a51b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c1a51ba90" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a51ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a51bde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c1a5177a8" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c1a5177a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a517af8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a517c80"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a517e08"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a516020"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a5161a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a516330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c1a5165f8" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a5165f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a516948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c1a5133e0" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c1a5133e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a513730"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a5138b8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a513a40"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a513bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a513d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a512020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c1a5122e8" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a5122e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a512638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c1a50f180" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c1a50f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a50f4d0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a50f658"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a50f7e0"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a50f968"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a50faf0"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a50fc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c1a50e020" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a50e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a50e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c1a50a020" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c1a50a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a50a370"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a50a4f8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a50a680"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a50a808"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a50a990"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a50ab18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c1a50ade0" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a50ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a509170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c1a535cd8" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c1a535cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a5340a0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a534228"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a5343b0"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a534538"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a5346c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a534848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c1a534b10" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a534b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a534e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b6c1a5309d8" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b6c1a5309d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1a530d28"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a52f020"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a52f1a8"/>
        <function-ref name="edge" scoped="" ref="0x2b6c1a52f330"/>
        <function-ref name="enable" scoped="" ref="0x2b6c1a52f4b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b6c1a52f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b6c1a52f908" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b6c1a52f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a52fc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x2b6c1a523550" loc="51:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x2b6c1a523550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a5238a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a523a28"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a523bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a523d38"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a522020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a5221a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a522330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a5224b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b6c1a526930" loc="47:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b6c1a526930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a526c80"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a526e08"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c1a523020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c1a5231a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x2b6c1a5200c0" loc="69:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x2b6c1a5200c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1a520410"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1a520598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b6c1a73c470" loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b6c1a73c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a73c7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a73c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b6c1a73fc10" loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6c1a73fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a73d020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a73d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b6c1a742900" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b6c1a742900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a742c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b6c1a73ac10" loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6c1a73ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a739020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a7391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b6c1a73dc10" loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b6c1a73dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a73c020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a73c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b6c1a73cc10" loc="65:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b6c1a73cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a73b020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a73b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b6c1a740b88" loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b6c1a740b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a73f020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a73f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6c1a7468c8" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a7468c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6c1a746c18"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6c1a746da0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6c1a745020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b6c1a745900" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6c1a745900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a745c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b6c1a741c50" loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b6c1a741c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a740020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b6c1a741638" loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6c1a741638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a741988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b6c1a73d470" loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a73d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a73d7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a73d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b6c1a741020" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b6c1a741020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a741370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b6c1a73a470" loc="70:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b6c1a73a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a73a7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a73a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b6c1a739470" loc="74:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b6c1a739470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a7399c0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a739b48"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a739cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a739e58"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a738020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b6c1a743020" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b6c1a743020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a743370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b6c1a73f470" loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b6c1a73f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a73f7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a73f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b6c1a7402e8" loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b6c1a7402e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a740738"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a7408c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b6c1a743638" loc="48:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b6c1a743638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a743988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1a747bf8" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a747bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a746020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a7461a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a746330"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a7464b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a746640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b6c1a73bc10" loc="69:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b6c1a73bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a73a020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a73a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b6c1a73b470" loc="68:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b6c1a73b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a73b7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a73b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b6c1a7452e8" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6c1a7452e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a745638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b6c1a7422e8" loc="50:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b6c1a7422e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a742638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b6c1a743c50" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b6c1a743c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a742020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b6c1a7382e8" loc="75:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b6c1a7382e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a738638"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a7387c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a738948"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a738ad0"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a738c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b6c1a54d020" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2b6c1a54d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a54d370"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a54d4f8"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a54d680"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a54d808"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a54d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6c1a54e020" loc="40:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a54e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6c1a54e370"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6c1a54e4f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6c1a54e680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b6c1a57c208" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2b6c1a57c208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a57c558"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a57c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b6c1a57b020" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2b6c1a57b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a57b370"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a57b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1a550348" loc="39:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a550348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a550698"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a550820"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a5509a8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a550b30"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a550cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b6c1a57bd70" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2b6c1a57bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a57a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2b6c1a568468" loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b6c1a568468"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a5687b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a568940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b6c1a576cc8" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2b6c1a576cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a5740a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a574228"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a5743b0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a574538"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a5746c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6c1a57ac90" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a57ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6c1a577020"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6c1a5771a8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6c1a577330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b6c1a56fc78" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b6c1a56fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b6c1a56e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2b6c1a568c80" loc="54:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x2b6c1a568c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6c1a56d020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6c1a56d1a8"/>
        <function-ref name="isState" scoped="" ref="0x2b6c1a56d330"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6c1a56d4b8"/>
        <function-ref name="requestState" scoped="" ref="0x2b6c1a56d640"/>
        <function-ref name="forceState" scoped="" ref="0x2b6c1a56d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b6c1a5701c8" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b6c1a5701c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a570518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a5706a0"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a570828"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a5709b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a570b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b6c1a573020" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2b6c1a573020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a573370"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a5734f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b6c1a573d20" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2b6c1a573d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a5720a0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a572228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c1a56da40" loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c1a56da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c1a56dd90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c1a56c020"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c1a56c1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c1a56c330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c1a56c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a56c640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c1a56c7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c1a56cde8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a56c950"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c1a56cad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c1a56cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1a577ac0" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a577ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a577e10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a576020"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a5761a8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a576330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a5764b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2b6c1a594910" loc="86:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x2b6c1a594910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1a594c60"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1a594de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b6c1a572a60" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2b6c1a572a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a572db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b6c1a5cd1c8" loc="67:/opt/tinyos-2.0.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b6c1a5cd1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6c1a5cd518"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6c1a5cd6a0"/>
        <function-ref name="isState" scoped="" ref="0x2b6c1a5cd828"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6c1a5cd9b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b6c1a5cdb38"/>
        <function-ref name="forceState" scoped="" ref="0x2b6c1a5cdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b6c1a5c91c8" loc="66:/opt/tinyos-2.0.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b6c1a5c91c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6c1a5c9518"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6c1a5c96a0"/>
        <function-ref name="isState" scoped="" ref="0x2b6c1a5c9828"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6c1a5c99b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b6c1a5c9b38"/>
        <function-ref name="forceState" scoped="" ref="0x2b6c1a5c9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a5c8a38" loc="66:/opt/tinyos-2.0.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a5c8a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a5c8d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b6c1a5c5570" loc="67:/opt/tinyos-2.0.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b6c1a5c5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6c1a5c58c0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6c1a5c5a48"/>
        <function-ref name="isState" scoped="" ref="0x2b6c1a5c5bd0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6c1a5c5d58"/>
        <function-ref name="requestState" scoped="" ref="0x2b6c1a5f5020"/>
        <function-ref name="forceState" scoped="" ref="0x2b6c1a5f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b6c1a7245f8" loc="43:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b6c1a7245f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a724948"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a724ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b6c1a724020" loc="42:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b6c1a724020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b6c1a724370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a5dfde0" loc="39:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a5dfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a5de170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1a5de3f8" loc="40:/opt/tinyos-2.0.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a5de3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a5de748"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a5de8d0"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a5dea58"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a5debe0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a5ded68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b6c1a60aab0" loc="68:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b6c1a60aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a60ae00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a609020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b6c1a60a478" loc="67:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b6c1a60a478"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b6c1a60a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a60de28" loc="66:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a60de28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a60a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1a6097f0" loc="69:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a6097f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a609b40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a609cc8"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a609e50"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a608020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a6081a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b6c1a631830" loc="207:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b6c1a631830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1a631b80"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1a631d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b6c1a604bf8" loc="79:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b6c1a604bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a603020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a6031a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b6c1a618208" loc="84:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b6c1a618208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a618558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a6186e0"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a618868"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a6189f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a618b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b6c1a604600" loc="78:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b6c1a604600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b6c1a604950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a604020" loc="77:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a604020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a604370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b6c1a601020" loc="83:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b6c1a601020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b6c1a601370"/>
        <function-ref name="sleep" scoped="" ref="0x2b6c1a6197c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b6c1a601680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c1a619950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b6c1a601990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b6c1a601b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b6c1a601ca0"/>
        <function-ref name="read" scoped="" ref="0x2b6c1a601e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b6c1a600020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b6c1a6001a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b6c1a600330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c1a6004b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b6c1a600640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b6c1a6008c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b6c1a600a50"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a600bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b6c1a600d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b6c1a619020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b6c1a6191a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b6c1a619330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b6c1a6194b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b6c1a6014f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b6c1a601808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b6c1a619640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1a603938" loc="80:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a603938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a603c88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a603e10"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a602020"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a6021a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a602330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b6c1a613d78" loc="86:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b6c1a613d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b6c1a6160f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b6c1a6135d0" loc="85:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c1a6135d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c1a613920"/>
        <function-ref name="userId" scoped="" ref="0x2b6c1a613aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b6c1a66d1a0" loc="59:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b6c1a66d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b6c1a66d4f0"/>
        <function-ref name="sleep" scoped="" ref="0x2b6c1a66b950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b6c1a66d800"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c1a66bad8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b6c1a66db10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b6c1a66dc98"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b6c1a66de20"/>
        <function-ref name="read" scoped="" ref="0x2b6c1a66c020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b6c1a66c1a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b6c1a66c330"/>
        <function-ref name="setClock" scoped="" ref="0x2b6c1a66c4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c1a66c640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b6c1a66c7c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b6c1a66ca50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b6c1a66cbd8"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a66cd60"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b6c1a66b020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b6c1a66b1a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b6c1a66b330"/>
        <function-ref name="getClock" scoped="" ref="0x2b6c1a66b4b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b6c1a66b640"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b6c1a66d678"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b6c1a66d988"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b6c1a66b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b6c1a65e020" loc="64:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b6c1a65e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a65e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a65e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a65e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a65e808"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a65e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a65eb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a65eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a65ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b6c1a664c58" loc="62:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b6c1a664c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a663020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a6631a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a663330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a6634b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a663640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a6637c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a663950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a663ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b6c1a660a68" loc="61:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b6c1a660a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a660db8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a664020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a6641a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a664330"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a6644b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a664640"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a6647c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a664950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b6c1a660230" loc="58:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b6c1a660230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c1a660580"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a660708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b6c1a65d1a8" loc="65:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b6c1a65d1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b6c1a65d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b6c1a66abb0" loc="57:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b6c1a66abb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b6c1a667020"/>
        <function-ref name="sleep" scoped="" ref="0x2b6c1a6654b8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b6c1a667330"/>
        <function-ref name="dataReady" scoped="" ref="0x2b6c1a665640"/>
        <function-ref name="initMaster" scoped="" ref="0x2b6c1a667640"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b6c1a6677c8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b6c1a667950"/>
        <function-ref name="read" scoped="" ref="0x2b6c1a667ad8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b6c1a667c60"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b6c1a667de8"/>
        <function-ref name="setClock" scoped="" ref="0x2b6c1a666020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c1a6661a8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b6c1a666330"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b6c1a6665b8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b6c1a666740"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a6668c8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b6c1a666a50"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b6c1a666bd8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b6c1a666d60"/>
        <function-ref name="getClock" scoped="" ref="0x2b6c1a665020"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b6c1a6651a8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b6c1a6671a8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b6c1a6674b8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b6c1a665330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b6c1a663df0" loc="63:/opt/tinyos-2.0.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b6c1a663df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a65f170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a65f2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a65f480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a65f608"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a65f790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a65f918"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a65faa0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a65fc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c1a6f7830" loc="76:/opt/tinyos-2.0.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c1a6f7830"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c1a6f7ba0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c1a6f7d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c1a72c8a0" loc="79:/opt/tinyos-2.0.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c1a72c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c1a72cc10"/>
        <function-ref name="configure" scoped="" ref="0x2b6c1a72cd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1a6f8b10" loc="75:/opt/tinyos-2.0.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a6f8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a6f8e80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a6f7030"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a6f71b8"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a6f7340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a6f74c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c1a72c020" loc="77:/opt/tinyos-2.0.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c1a72c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c1a72c370"/>
        <function-ref name="userId" scoped="" ref="0x2b6c1a72c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1ae8a8a8" loc="34:/opt/tinyos-2.0.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1ae8a8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1ae8abf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b6c1ae8ae80" loc="35:/opt/tinyos-2.0.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b6c1ae8ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c1ae891f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c1ae89380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c1ae89508"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c1ae89690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b6c1ae879a8" loc="52:/opt/tinyos-2.0.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b6c1ae879a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b6c1ae87d18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b6c1ae86020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b6c1ae86b08" loc="56:/opt/tinyos-2.0.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b6c1ae86b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b6c1ae86e78"/>
        <function-ref name="configure" scoped="" ref="0x2b6c1ae84030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b6c1ae842b8" loc="57:/opt/tinyos-2.0.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b6c1ae842b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b6c1ae84608"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b6c1ae84790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b6c1ae84918"/>
        <function-ref name="dequeue" scoped="" ref="0x2b6c1ae84aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1ae88be0" loc="51:/opt/tinyos-2.0.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1ae88be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1ae87020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1ae871a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c1ae87330"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1ae874b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1ae87640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b6c1ae86268" loc="53:/opt/tinyos-2.0.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b6c1ae86268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b6c1ae865b8"/>
        <function-ref name="userId" scoped="" ref="0x2b6c1ae86740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b6c1ae84d68" loc="69:/opt/tinyos-2.0.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b6c1ae84d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1ae830f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1ae83278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b6c1a75ec10" loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b6c1a75ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a75d020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a75d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b6c1a75f4f0" loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6c1a75f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a75f840"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a75f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b6c1a7632e8" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b6c1a7632e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a763638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b6c1a75a470" loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6c1a75a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a75a7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a75a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b6c1a75e470" loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b6c1a75e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a75e7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a75e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b6c1a75d470" loc="65:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b6c1a75d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a75d7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a75d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b6c1a760528" loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b6c1a760528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a760878"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a760a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6c1a72f430" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a72f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6c1a72f780"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6c1a72f908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6c1a72fa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b6c1a72e3a0" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6c1a72e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a72e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b6c1a762638" loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b6c1a762638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a762988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b6c1a762020" loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6c1a762020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a762370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b6c1a75fc90" loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a75fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a75e020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a75e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b6c1a763900" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b6c1a763900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a763c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b6c1a75cc10" loc="70:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b6c1a75cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a75a020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a75a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b6c1a75ac10" loc="74:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b6c1a75ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a7591a8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a759330"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a7594b8"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a759640"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a7597c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b6c1a72e9b8" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b6c1a72e9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a72ed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b6c1a760cc8" loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b6c1a760cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a75f0a0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a75f228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b6c1a762c50" loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b6c1a762c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a7600d8"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a760260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b6c1a72d020" loc="48:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b6c1a72d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a72d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1a7306a8" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a7306a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a7309f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a730b80"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a730d08"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a72f020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a72f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b6c1a75c470" loc="69:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b6c1a75c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a75c7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a75c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b6c1a75dc10" loc="68:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b6c1a75dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a75c020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a75c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b6c1a72fd58" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6c1a72fd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a72e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b6c1a72dc50" loc="50:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b6c1a72dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a763020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b6c1a72d638" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b6c1a72d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a72d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b6c1a759a90" loc="75:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b6c1a759a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a759de0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a758020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a7581a8"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a758330"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a7584b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b6c1a74b470" loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b6c1a74b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a74b7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a74b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b6c1a74dc10" loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6c1a74dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a74c020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a74c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b6c1a751900" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b6c1a751900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a751c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b6c1a748c10" loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6c1a748c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a77f020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a77f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b6c1a74cc10" loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b6c1a74cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a74b020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a74b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b6c1a74bc10" loc="65:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b6c1a74bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a749020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a7491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b6c1a74eb88" loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b6c1a74eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a74d020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a74d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6c1a7548c8" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a7548c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6c1a754c18"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6c1a754da0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6c1a753020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b6c1a753900" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6c1a753900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a753c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b6c1a74fc50" loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b6c1a74fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a74e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b6c1a74f638" loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6c1a74f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a74f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b6c1a74c470" loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a74c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a74c7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a74c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b6c1a74f020" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b6c1a74f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a74f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b6c1a748470" loc="70:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b6c1a748470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a7487c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a748948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b6c1a77f470" loc="74:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b6c1a77f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a77f9c0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a77fb48"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a77fcd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a77fe58"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a77e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b6c1a752020" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b6c1a752020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a752370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b6c1a74d470" loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b6c1a74d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a74d7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a74d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b6c1a74e2e8" loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b6c1a74e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a74e738"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a74e8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b6c1a752638" loc="48:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b6c1a752638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a752988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1a755c30" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a755c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a754020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a7541a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a754330"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a7544b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a754640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b6c1a749c10" loc="69:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b6c1a749c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a748020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a7481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b6c1a749470" loc="68:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b6c1a749470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a7497c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a749948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b6c1a7532e8" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6c1a7532e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a753638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b6c1a7512e8" loc="50:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b6c1a7512e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a751638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b6c1a752c50" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b6c1a752c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a751020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b6c1a77e2e8" loc="75:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b6c1a77e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a77e638"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a77e7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a77e948"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a77ead0"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a77ec58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b6c1a7783a8" loc="43:/opt/tinyos-2.0.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b6c1a7783a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b6c1a7786f8"/>
        <function-ref name="changed" scoped="" ref="0x2b6c1a778880"/>
        <function-ref name="amGroup" scoped="" ref="0x2b6c1a778a08"/>
        <function-ref name="setAddress" scoped="" ref="0x2b6c1a778b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b6c1a795458" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2b6c1a795458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b6c1a7957a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b6c1a798908" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b6c1a798908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6c1a798c58"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6c1a798de0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6c1a797020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6c1a7971a8"/>
        <function-ref name="setCca" scoped="" ref="0x2b6c1a797330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6c1a7974b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b6c1a796cf0" loc="48:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b6c1a796cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b6c1a7950a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2b6c1a79bc30" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b6c1a79bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a798020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a7981a8"/>
        <function-ref name="modify" scoped="" ref="0x2b6c1a798330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a7984b8"/>
        <function-ref name="resend" scoped="" ref="0x2b6c1a798640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b6c1a79b480" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b6c1a79b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c1a79b7d0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a79b958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x2b6c1a793770" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x2b6c1a793770"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x2b6c1a793ac0"/>
        <function-ref name="receivedSFD" scoped="" ref="0x2b6c1a793c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b6c1a7aada8" loc="48:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b6c1a7aada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b6c1a7a9170"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b6c1a7a92f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b6c1a7a9480"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b6c1a7a9608"/>
        <function-ref name="setCca" scoped="" ref="0x2b6c1a7a9790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b6c1a7a9918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b6c1a7a8630" loc="50:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b6c1a7a8630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b6c1a7a8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2b6c1a7d1478" loc="68:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b6c1a7d1478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a7d17c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2b6c1a7a2d50" loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2b6c1a7a2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b6c1a7a10d8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a7a1260"/>
        <function-ref name="captured" scoped="" ref="0x2b6c1a7a13e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b6c1a7a1570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2b6c1a7a7718" loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x2b6c1a7a7718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c19c538b8"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c19c53c10"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c1a7a3020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c1a7a5020"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c1a7a5930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c1a7a54a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c1a7a34a8"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a7a6578"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a7a6a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b6c1a7a3940" loc="54:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a7a3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6c1a7a3c90"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6c1a7a3e18"/>
        <function-ref name="getPower" scoped="" ref="0x2b6c1a7a2020"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6c1a7a21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2b6c1a7d3538" loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6c1a7d3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a7d3888"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a7d3a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b6c1a7d3da8" loc="65:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b6c1a7d3da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a7d2170"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a7d22f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2b6c1a7ca0f0" loc="72:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b6c1a7ca0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c1a7ca640"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b6c1a7ca7c8"/>
        <function-ref name="sfd" scoped="" ref="0x2b6c1a7ca950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c1a7aa130" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c1a7aa130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a7aa480"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a7aa608"/>
        <function-ref name="modify" scoped="" ref="0x2b6c1a7aa790"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a7aa918"/>
        <function-ref name="resend" scoped="" ref="0x2b6c1a7aaaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2b6c1a7d5cb0" loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a7d5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6c1a7d40a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6c1a7d4228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6c1a7d43b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2b6c1a7d1b68" loc="69:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6c1a7d1b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a7d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b6c1a7a0b10" loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b6c1a7a0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a79f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a79f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a79f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a79f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a79f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a79f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a79f950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a79fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a7ac270" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a7ac270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a7ac5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b6c1a7a24d8" loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a7a24d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b6c1a7a2828"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6c1a7a29b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b6c1a7d03d0" loc="70:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a7d03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a7d0720"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a7d08a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b6c1a7d5020" loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b6c1a7d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a7d5370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a7d54f8"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a7d5680"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a7d5808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a7d5990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2b6c1a7a18b8" loc="57:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b6c1a7a18b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a7a1c08"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a7a1d90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a7a0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a7a01a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a7a0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a7a04b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a7a0640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a7a07c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b6c1a7d2670" loc="66:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b6c1a7d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a7d29c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2b6c1a79fe20" loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2b6c1a79fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a79e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a79e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a79e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a79e640"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a79e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a79e950"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a79ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a79ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c1a7cac08" loc="73:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c1a7cac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c1a7ce020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c1a7ce1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c1a7ce330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c1a7ce4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c1a7ce640"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a7ce7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c1a7ce950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c1a7cd020"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a7cead8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c1a7cec60"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c1a7cede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x2b6c1a7a9cf0" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x2b6c1a7a9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x2b6c1a7a80a0"/>
        <function-ref name="receivedSFD" scoped="" ref="0x2b6c1a7a8228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b6c1a7ac8b0" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b6c1a7ac8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c1a7acc00"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a7acd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2b6c1a7d4720" loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b6c1a7d4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a7d4a70"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a7d4bf8"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a7d4d80"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a7d3020"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a7d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2b6c1a7d2d40" loc="67:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b6c1a7d2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a7d10d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b6c1a7a8d78" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2b6c1a7a8d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b6c1a7a70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b6c1a85e020" loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b6c1a85e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a85e370"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a85e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b6c1a860840" loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6c1a860840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a860b90"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a860d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b6c1a864638" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b6c1a864638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a864988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b6c1a85b7c0" loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6c1a85b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a85bb10"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a85bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b6c1a85f7c0" loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b6c1a85f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a85fb10"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a85fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b6c1a85e7c0" loc="65:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b6c1a85e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a85eb10"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a85ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b6c1a8618c0" loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b6c1a8618c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a861c10"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a861d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6c1a8675b8" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a8675b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6c1a867908"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6c1a867a90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6c1a867c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b6c1a866638" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6c1a866638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a866988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b6c1a862900" loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b6c1a862900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a862c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b6c1a8622e8" loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6c1a8622e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a862638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b6c1a85f020" loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a85f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a85f370"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a85f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b6c1a864c50" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b6c1a864c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a862020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b6c1a85b020" loc="70:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b6c1a85b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a85b370"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a85b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b6c1a85a020" loc="74:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b6c1a85a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a85a570"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a85a6f8"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a85a880"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a85aa08"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a85ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b6c1a866c50" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b6c1a866c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a865020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b6c1a8600a0" loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b6c1a8600a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a8603f0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a860578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b6c1a861020" loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b6c1a861020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a861470"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8615f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b6c1a8652e8" loc="48:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b6c1a8652e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a865638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1a82d958" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a82d958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a82dca8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a82de30"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a867020"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a8671a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a867330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b6c1a85d7c0" loc="69:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b6c1a85d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a85db10"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a85dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b6c1a85d020" loc="68:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b6c1a85d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a85d370"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a85d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b6c1a866020" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6c1a866020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a866370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b6c1a864020" loc="50:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b6c1a864020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a864370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b6c1a865900" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b6c1a865900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a865c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b6c1a85ae58" loc="75:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b6c1a85ae58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a8591e8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a859370"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8594f8"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a859680"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a859808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b6c1a851910" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b6c1a851910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c1a851c60"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b6c1a851de8"/>
        <function-ref name="sfd" scoped="" ref="0x2b6c1a850020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c1a8502f0" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c1a8502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a850640"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a8507c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a850950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b6c1a850d58" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2b6c1a850d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b6c1a84f0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b6c1a851128" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b6c1a851128"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c1a851478"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a851600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2b6c1a885998" loc="48:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2b6c1a885998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a885ce8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a885e70"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a883020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a8831a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a883330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a8834b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a883640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a8837c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b6c1a87d800" loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b6c1a87d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b6c1a87db50"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b6c1a87dcd8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b6c1a87de60"/>
        <function-ref name="syncDone" scoped="" ref="0x2b6c1a87c020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b6c1a87c1a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b6c1a87c330"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b6c1a87c4b8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b6c1a87c640"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b6c1a87c7c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b6c1a87c950"/>
        <function-ref name="sync" scoped="" ref="0x2b6c1a87cad8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b6c1a87cc60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b6c1a87cde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2b6c1a871020" loc="109:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x2b6c1a871020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1a871370"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1a8714f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2b6c1a883b28" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2b6c1a883b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a883e78"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a882030"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a8821b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a882340"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a8824c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a882650"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a8827d8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a882960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b6c1a87e3a8" loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a87e3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6c1a87e6f8"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6c1a87e880"/>
        <function-ref name="getPower" scoped="" ref="0x2b6c1a87ea08"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6c1a87eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b6c1a84ccc0" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b6c1a84ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b6c1a84b0a0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b6c1a84b228"/>
        <function-ref name="sfd" scoped="" ref="0x2b6c1a84b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2b6c1a87f520" loc="54:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b6c1a87f520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a87f870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b6c1a84a7f0" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b6c1a84a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c1a84ab40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c1a84acc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c1a84ae50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c1a885020"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a8851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c1a885330"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a8854b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c1a885640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a84fe50" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a84fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a84c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b6c1a87d020" loc="57:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a87d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b6c1a87d370"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6c1a87d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c1a84b680" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c1a84b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a84b9d0"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a84bb58"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a84bce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b6c1a881900" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b6c1a881900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a881c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a881dd8"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a880020"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a8801a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a880330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2b6c1a8806a0" loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b6c1a8806a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a8809f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a880b78"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a880d00"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a87f020"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a87f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b6c1a84a158" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2b6c1a84a158"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b6c1a84a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c1a87b250" loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c1a87b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c1a87b5a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c1a87b728"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c1a87b8b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c1a87ba38"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c1a87bbc0"/>
        <function-ref name="get" scoped="" ref="0x2b6c1a87bd48"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c1a87a020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c1a87a640"/>
        <function-ref name="set" scoped="" ref="0x2b6c1a87a1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c1a87a330"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c1a87a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2b6c1a882d40" loc="50:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b6c1a882d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c1a8810d8"/>
        <function-ref name="disable" scoped="" ref="0x2b6c1a881260"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b6c1a8813e8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b6c1a881570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2b6c1a87fc10" loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6c1a87fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a87e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b6c1a84c4d8" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b6c1a84c4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b6c1a84c828"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a84c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b6c1a8d88b8" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b6c1a8d88b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b6c1a8d8c08"/>
        <function-ref name="getRssi" scoped="" ref="0x2b6c1a8d8d90"/>
        <function-ref name="getPower" scoped="" ref="0x2b6c1a8d4020"/>
        <function-ref name="getLqi" scoped="" ref="0x2b6c1a8d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b6c1a8d3020" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a8d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b6c1a8d3370"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6c1a8d34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b6c1a8d4540" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b6c1a8d4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6c1a8d4890"/>
        <function-ref name="noAck" scoped="" ref="0x2b6c1a8d4a18"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6c1a8d4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b6c1a8f1470" loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b6c1a8f1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a8f17c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8f1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b6c1a8f3c10" loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b6c1a8f3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a8f2020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b6c1a8f7900" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b6c1a8f7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a8f7c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b6c1a8efc10" loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b6c1a8efc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a8ee020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b6c1a8f2c10" loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b6c1a8f2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a8f1020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8f11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b6c1a8f1c10" loc="65:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b6c1a8f1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a8f0020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b6c1a8f5b88" loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b6c1a8f5b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a8f3020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8f31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b6c1a8d58c8" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b6c1a8d58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b6c1a8d5c18"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b6c1a8d5da0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b6c1a8f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b6c1a8f9900" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b6c1a8f9900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a8f9c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b6c1a8f6c50" loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b6c1a8f6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a8f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b6c1a8f6638" loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b6c1a8f6638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a8f6988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b6c1a8f2470" loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b6c1a8f2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a8f27c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8f2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b6c1a8f6020" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b6c1a8f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a8f6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b6c1a8ef470" loc="70:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b6c1a8ef470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a8ef7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8ef948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b6c1a8ee470" loc="74:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b6c1a8ee470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a8ee9c0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a8eeb48"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8eecd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a8eee58"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a8ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b6c1a8f8020" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b6c1a8f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a8f8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b6c1a8f3470" loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b6c1a8f3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a8f37c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8f3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b6c1a8f52e8" loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b6c1a8f52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a8f5738"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8f58c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b6c1a8f8638" loc="48:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b6c1a8f8638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a8f8988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b6c1a8d6c60" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b6c1a8d6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b6c1a8d5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b6c1a8d51a8"/>
        <function-ref name="request" scoped="" ref="0x2b6c1a8d5330"/>
        <function-ref name="granted" scoped="" ref="0x2b6c1a8d54b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b6c1a8d5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b6c1a8f0c10" loc="69:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b6c1a8f0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a8ef020"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8ef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b6c1a8f0470" loc="68:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b6c1a8f0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b6c1a8f07c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8f0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b6c1a8f92e8" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b6c1a8f92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a8f9638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b6c1a8f72e8" loc="50:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b6c1a8f72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a8f7638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b6c1a8f8c50" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b6c1a8f8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b6c1a8f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b6c1a8ec2e8" loc="75:/opt/tinyos-2.0.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b6c1a8ec2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b6c1a8ec638"/>
        <function-ref name="writeDone" scoped="" ref="0x2b6c1a8ec7c0"/>
        <function-ref name="write" scoped="" ref="0x2b6c1a8ec948"/>
        <function-ref name="beginRead" scoped="" ref="0x2b6c1a8ecad0"/>
        <function-ref name="readDone" scoped="" ref="0x2b6c1a8ecc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b6c1a90fde0" loc="35:/opt/tinyos-2.0.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b6c1a90fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b6c1a90c170"/>
        <function-ref name="rand32" scoped="" ref="0x2b6c1a90c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b6c1a90dd00" loc="34:/opt/tinyos-2.0.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b6c1a90dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a90f8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a910020" loc="33:/opt/tinyos-2.0.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a910020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a910370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b6c1a908898" loc="34:/opt/tinyos-2.0.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b6c1a908898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b6c1a908be8"/>
        <function-ref name="rand32" scoped="" ref="0x2b6c1a908d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b6c1a9096b0" loc="33:/opt/tinyos-2.0.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b6c1a9096b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a908370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a90ce18" loc="32:/opt/tinyos-2.0.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a90ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a9091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b6c1a903288" loc="37:/opt/tinyos-2.0.2/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b6c1a903288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b6c1a9035d8"/>
        <function-ref name="rand32" scoped="" ref="0x2b6c1a903760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b6c1a9041e8" loc="36:/opt/tinyos-2.0.2/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b6c1a9041e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a904d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a907958" loc="35:/opt/tinyos-2.0.2/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a907958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a907ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b6c1a912c68" loc="67:/opt/tinyos-2.0.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b6c1a912c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6c1a911020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6c1a9111a8"/>
        <function-ref name="isState" scoped="" ref="0x2b6c1a911330"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6c1a9114b8"/>
        <function-ref name="requestState" scoped="" ref="0x2b6c1a911640"/>
        <function-ref name="forceState" scoped="" ref="0x2b6c1a9117c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6c1a92d838" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b6c1a92d838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a92db88"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a92dd10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a92c020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a92c1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a92c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c1a930a08" loc="40:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c1a930a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a930d58"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a92d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a92d1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a92d330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a92d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6c1a9283a0" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b6c1a9283a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a9286f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a928878"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a928a00"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a928b88"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a928d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c1a929020" loc="40:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c1a929020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a929370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a9294f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a929680"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a929808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a929990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b6c1a926da0" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b6c1a926da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b6c1a925170"/>
        <function-ref name="rand32" scoped="" ref="0x2b6c1a9252f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a929c08" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a929c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a928020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b6c1a9255e8" loc="48:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a9255e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b6c1a925938"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6c1a925ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2b6c1a926020" loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b6c1a926020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6c1a926370"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6c1a9264f8"/>
        <function-ref name="isState" scoped="" ref="0x2b6c1a926680"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6c1a926808"/>
        <function-ref name="requestState" scoped="" ref="0x2b6c1a926990"/>
        <function-ref name="forceState" scoped="" ref="0x2b6c1a926b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b6c1a92bc30" loc="67:/opt/tinyos-2.0.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b6c1a92bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6c1a953020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6c1a9531a8"/>
        <function-ref name="isState" scoped="" ref="0x2b6c1a953330"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6c1a9534b8"/>
        <function-ref name="requestState" scoped="" ref="0x2b6c1a953640"/>
        <function-ref name="forceState" scoped="" ref="0x2b6c1a9537c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b6c1a94ddb0" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b6c1a94ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a94c170"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a94c2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a94c480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c1a950878" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c1a950878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a950bc8"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a950d50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a94d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b6c1a94d398" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b6c1a94d398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a94d6e8"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a94d870"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a94d9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b6c1a948cb0" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b6c1a948cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a9470a0"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a947228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a9473b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c1a9485a8" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c1a9485a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c1a9488f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c1a949240" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c1a949240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a949590"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a949718"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a9498a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b6c1a9476a0" loc="50:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b6c1a9476a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2b6c1a9479f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b6c1a947b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b6c1a949c18" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b6c1a949c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a948020"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a9481a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a948330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b6c1a99d3d8" loc="68:/opt/tinyos-2.0.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b6c1a99d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a99d728"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a99d8b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a99da38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6c1a99dd38" loc="69:/opt/tinyos-2.0.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b6c1a99dd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a99c0d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a99c260"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a99c3e8"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a99c570"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a99c6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c1a94ebb0" loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c1a94ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a95e020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a95e1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a95e330"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a95e4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a95e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c1a95e8d0" loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c1a95e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a95ec20"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a95eda8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a99d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b6c1a996a90" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b6c1a996a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c1a996de0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c1a995020"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a9951a8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a995330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6c1a994528" loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b6c1a994528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a994878"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a994a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a994b88"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a994d10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a993020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b6c1a993358" loc="50:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b6c1a993358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a9936a8"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a993830"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a9939b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c1a998020" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c1a998020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a998370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a9984f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a998680"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a998808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a998990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b6c1a997628" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c1a997628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x2b6c1a997978"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x2b6c1a997b00"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x2b6c1a997c88"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x2b6c1a997e10"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x2b6c1a996020"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x2b6c1a9961a8"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x2b6c1a996330"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x2b6c1a9964b8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x2b6c1a996640"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x2b6c1a9967c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b6c1a995650" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x2b6c1a995650"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6c1a9959a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6c1a995b28"/>
        <function-ref name="isState" scoped="" ref="0x2b6c1a995cb0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6c1a995e38"/>
        <function-ref name="requestState" scoped="" ref="0x2b6c1a994020"/>
        <function-ref name="forceState" scoped="" ref="0x2b6c1a9941a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b6c1a993d28" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b6c1a993d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b6c1a9920a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b6c1a992228"/>
        <function-ref name="start" scoped="" ref="0x2b6c1a9923b0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c1a992538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b6c1a998c20" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b6c1a998c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1a997020"/>
        <function-ref name="receive" scoped="" ref="0x2b6c1a9971a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a997330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b6c1a98e170" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b6c1a98e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x2b6c1a98e4c0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x2b6c1a98e648"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x2b6c1a98e7d0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x2b6c1a98e958"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x2b6c1a98eae0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x2b6c1a98ec68"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x2b6c1a98edf0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x2b6c1a98d020"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x2b6c1a98d1a8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x2b6c1a98d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b6c1a990e38" loc="67:/opt/tinyos-2.0.2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b6c1a990e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b6c1a9bc1c0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b6c1a9bc348"/>
        <function-ref name="isState" scoped="" ref="0x2b6c1a9bc4d0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b6c1a9bc658"/>
        <function-ref name="requestState" scoped="" ref="0x2b6c1a9bc7e0"/>
        <function-ref name="forceState" scoped="" ref="0x2b6c1a9bc968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b6c1a9b6d10" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b6c1a9b6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a9b50a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a9b5228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a9b53b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a9b5538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a9b56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c1a9b72a0" loc="40:/opt/tinyos-2.0.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c1a9b72a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a9b75f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a9b7778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a9b7900"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a9b7a88"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a9b7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b6c1a9b6020" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b6c1a9b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b6c1a9b6370"/>
        <function-ref name="setRetries" scoped="" ref="0x2b6c1a9b64f8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b6c1a9b6680"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b6c1a9b6808"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b6c1a9b6990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b6c1a9b1020" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b6c1a9b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6c1a9b1370"/>
        <function-ref name="noAck" scoped="" ref="0x2b6c1a9b14f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6c1a9b1680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b6c1a9b22c8" loc="40:/opt/tinyos-2.0.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b6c1a9b22c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b6c1a9b2618"/>
        <function-ref name="setRetries" scoped="" ref="0x2b6c1a9b27a0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b6c1a9b2928"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b6c1a9b2ab0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b6c1a9b2c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6c1aa2ec88" loc="41:/opt/tinyos-2.0.2/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c1aa2ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1aa2d020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1aa2d1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1aa2d330"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1aa2d4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1aa2d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b6c1aa2d888" loc="42:/opt/tinyos-2.0.2/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c1aa2d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1aa2dbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1aa2dd60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1aa2c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1aa2c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c1aa2c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b6c1aa2c578" loc="43:/opt/tinyos-2.0.2/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c1aa2c578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c1aa2c8c8"/>
        <function-ref name="source" scoped="" ref="0x2b6c1aa2ca50"/>
        <function-ref name="address" scoped="" ref="0x2b6c1aa2cbd8"/>
        <function-ref name="destination" scoped="" ref="0x2b6c1aa2cd60"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c1aa2b020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c1aa2b1a8"/>
        <function-ref name="type" scoped="" ref="0x2b6c1aa2b330"/>
        <function-ref name="setType" scoped="" ref="0x2b6c1aa2b4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c1aa2b640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c1aa2b7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c1aa2b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b6c1aa2bbd8" loc="44:/opt/tinyos-2.0.2/tos/system/AMSenderC.nc">
      <component-ref qname="BlinkAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b6c1aa2bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b6c1aa2a020"/>
        <function-ref name="noAck" scoped="" ref="0x2b6c1aa2a1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b6c1aa2a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b6c1af5abe0" loc="36:/opt/tinyos-2.0.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c1af5abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1af59020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1af591a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1af59330"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1af594b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1af59640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b6c1af598e8" loc="38:/opt/tinyos-2.0.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c1af598e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1af59c38"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1af59dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1af58020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1af581a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1af58330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b6c1af58578" loc="39:/opt/tinyos-2.0.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BlinkAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c1af58578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c1af588c8"/>
        <function-ref name="source" scoped="" ref="0x2b6c1af58a50"/>
        <function-ref name="address" scoped="" ref="0x2b6c1af58bd8"/>
        <function-ref name="destination" scoped="" ref="0x2b6c1af58d60"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c1af56020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c1af561a8"/>
        <function-ref name="type" scoped="" ref="0x2b6c1af56330"/>
        <function-ref name="setType" scoped="" ref="0x2b6c1af564b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c1af56640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c1af567c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c1af56950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c1a9fa370" loc="35:/opt/tinyos-2.0.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c1a9fa370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1a9fa6c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1a9fa848"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1a9fa9d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1a9fab58"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1a9face0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b6c1aa3a6f8" loc="40:/opt/tinyos-2.0.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b6c1aa3a6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1aa3aa68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1aa3abf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1aa3ad78"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1aa39020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1aa391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b6c1aa3b8a8" loc="38:/opt/tinyos-2.0.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b6c1aa3b8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b6c1aa3bc18"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1aa3bda0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1aa3a020"/>
        <function-ref name="cancel" scoped="" ref="0x2b6c1aa3a1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b6c1aa3a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b6c1aa38a10" loc="42:/opt/tinyos-2.0.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b6c1aa38a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c1aa38d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b6c1aa37020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b6c1aa371a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b6c1aa37330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b6c1aa374b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b6c1aa37780" loc="161:/opt/tinyos-2.0.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b6c1aa37780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1aa37ad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1aa37c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b6c1aa36020" loc="118:/opt/tinyos-2.0.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b6c1aa36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c1aa36370"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c1aa364f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b6c1aa393f0" loc="41:/opt/tinyos-2.0.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b6c1aa393f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b6c1aa39740"/>
        <function-ref name="source" scoped="" ref="0x2b6c1aa398c8"/>
        <function-ref name="address" scoped="" ref="0x2b6c1aa39a50"/>
        <function-ref name="destination" scoped="" ref="0x2b6c1aa39bd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b6c1aa39d60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b6c1aa38020"/>
        <function-ref name="type" scoped="" ref="0x2b6c1aa381a8"/>
        <function-ref name="setType" scoped="" ref="0x2b6c1aa38330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b6c1aa384b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b6c1aa38640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b6c1aa387c8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.0.2/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b6c19cdc588" loc="51:/opt/tinyos-2.0.2/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.0.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.0.2/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.0.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b6c19ccf258" loc="49:/opt/tinyos-2.0.2/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.0.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b6c19ce1408" loc="60:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b6c19ce1198" loc="60:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b6c19cd9b98" loc="31:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b6c19ce35b8" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b6c19ce3348" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b6c19ce20a8" loc="46:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b6c19ce3dd0" loc="46:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b6c19ce28f0" loc="53:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.0.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.0.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b6c19cf81d8" loc="33:/opt/tinyos-2.0.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b6c19cf88a0" loc="34:/opt/tinyos-2.0.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b6c19ceb458" loc="31:/opt/tinyos-2.0.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b6c19cf66f8" loc="36:/opt/tinyos-2.0.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c19cebaf8" loc="32:/opt/tinyos-2.0.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b6c19cf6020" loc="35:/opt/tinyos-2.0.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c19cee720" loc="29:/opt/tinyos-2.0.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b6c19ceed90" loc="30:/opt/tinyos-2.0.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.0.2/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.0.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b6c19bea328" loc="46:/opt/tinyos-2.0.2/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.0.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b6c19be8258" loc="61:/opt/tinyos-2.0.2/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.0.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b6c19beaa40" loc="54:/opt/tinyos-2.0.2/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.0.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.0.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b6c19bf6ae8" loc="56:/opt/tinyos-2.0.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.0.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b6c19bf5328" loc="64:/opt/tinyos-2.0.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.0.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.0.2/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.0.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b6c19c93798" loc="59:/opt/tinyos-2.0.2/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.0.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.0.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.0.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b6c19cba020" loc="54:/opt/tinyos-2.0.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.0.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b6c19c3d5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.0.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.0.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b6c19cb1328" loc="44:/opt/tinyos-2.0.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.0.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c19e7e020" loc="42:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c19e7e020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b6c19e8c918" loc="125:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c19e903e0" loc="72:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b6c19e8d020" loc="103:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6c19e8ea60" loc="103:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b6c19e8ed78" loc="103:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b6c19e8e328" loc="87:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b6c19e8b878" loc="140:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b6c19e8b070" loc="133:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b6c19e90b58" loc="81:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b6c19e7eaf0" loc="53:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6c19e7e880" loc="53:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b6c19e8c020" loc="118:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6c19e8d950" loc="118:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b6c19e8dc68" loc="118:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b6c19e91570" loc="62:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6c19e91300" loc="62:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c19e91d18" loc="67:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.0.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.0.2/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.0.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b6c19efdc58" loc="92:/opt/tinyos-2.0.2/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.0.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b6c19efd9e8" loc="92:/opt/tinyos-2.0.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b6c19efb0a8" loc="117:/opt/tinyos-2.0.2/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.0.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b6c19efce00" loc="117:/opt/tinyos-2.0.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c19efd070" loc="83:/opt/tinyos-2.0.2/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.0.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c19efc490" loc="109:/opt/tinyos-2.0.2/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.0.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x2b6c19eeba28" loc="54:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c19eeb7b8" loc="54:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b6c19eea4e8" loc="67:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c19eea278" loc="67:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b6c19ee7cd8" loc="108:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
        <documentation loc="97:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.  If&#10; len is not NULL, getPayload will return the length of the payload&#10; in it, which is the same as the return value from&#10; payloadLength(). If a protocol does not support variable length&#10; packets, then *len is equal to maxPayloadLength().&#10;&#10; @param msg   the packet&#10; @param len   pointer to where the current payload length should be stored.&#10; @return      a pointer to the packet's data payload for this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c19ee76d8" loc="108:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c19ee7a20" loc="108:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b6c19ee9ce8" loc="95:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b6c19ee9388" loc="83:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c19eeada0" loc="83:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c19ee9108" loc="83:/opt/tinyos-2.0.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b6c19f03358" loc="69:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c19ece020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b6c19ee5a20" loc="69:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c19ece020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b6c19ee5d80" loc="69:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c19f030c8" loc="69:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b6c19f003e8" loc="125:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c19f00140" loc="125:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b6c19f018f0" loc="112:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b6c19f02108" loc="85:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c19f03e38" loc="85:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b6c19f01020" loc="99:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c19f02a38" loc="99:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b6c19f02d60" loc="99:/opt/tinyos-2.0.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x2b6c19f0e600" loc="58:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x2b6c19f09ba0" loc="112:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="108:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c19f09930" loc="112:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x2b6c19f07290" loc="128:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="122:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x2b6c19f07020" loc="128:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x2b6c19f0d950" loc="81:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x2b6c19f0c718" loc="90:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param msg Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c19f0c100" loc="90:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x2b6c19f0c498" loc="90:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x2b6c19f0d020" loc="76:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x2b6c19f0ed48" loc="76:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x2b6c19f09020" loc="106:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="97:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param msg Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c19f0b9d0" loc="106:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x2b6c19f0bd30" loc="106:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x2b6c19f08670" loc="120:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="114:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x2b6c19f08400" loc="120:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x2b6c19f0b290" loc="95:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c19f0b020" loc="95:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x2b6c19f04cb8" loc="53:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x2b6c19f04a48" loc="53:/opt/tinyos-2.0.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b6c19e958f0" loc="50:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b6c19e94070" loc="56:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b6c19e947e0" loc="61:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b6c19e93758" loc="72:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b6c19ea5e70" loc="89:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c19ea4630" loc="106:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b6c19e93020" loc="66:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c19ea3290" loc="123:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b6c19ea3020" loc="123:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b6c19e951d8" loc="45:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b6c19ea5020" loc="78:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b6c19ea5738" loc="83:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.0.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b6c19ef2020" loc="166:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param amsg the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b6c19ecfbb8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c19ef3d28" loc="166:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b6c19ef8020" loc="77:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b6c19ece020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c19ee4d60" loc="77:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b6c19ea2a88" loc="57:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b6c19ece020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b6c19ee4530" loc="67:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b6c19ece020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c19ee42c0" loc="67:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b6c19ef7d18" loc="110:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c19ece020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c19ef7760" loc="110:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b6c19ef7a98" loc="110:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c19ece020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b6c19ef8de0" loc="92:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c19ece020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c19ef8828" loc="92:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b6c19ef8b60" loc="92:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c19ece020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b6c19ef56b0" loc="136:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c19ef5440" loc="136:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b6c19ef3418" loc="151:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c19ef5e40" loc="151:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b6c19ef3198" loc="151:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b6c19ecf808"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b6c19ef6a98" loc="125:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c19ef6828" loc="125:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b6c19ef2e70" loc="176:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param amsg the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b6c19ecfbb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b6c19ef28c0" loc="176:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b6c19ef2bf0" loc="176:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b6c19ecfbb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b6c19ef16c8" loc="184:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.0.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b6c19ecfbb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.0.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c19f63518" loc="42:/opt/tinyos-2.0.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c19f63518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b6c19f63da8" loc="50:/opt/tinyos-2.0.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.0.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.0.2/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c19f6ca50" loc="46:/opt/tinyos-2.0.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c19f6ca50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6c19f6cc80" loc="46:/opt/tinyos-2.0.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19f6cc80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b6c19f81548" loc="53:/opt/tinyos-2.0.2/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.0.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19f6cc80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b6c19f7f590" loc="65:/opt/tinyos-2.0.2/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.0.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b6c19f81d60" loc="60:/opt/tinyos-2.0.2/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.0.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b6c19f7fc80" loc="71:/opt/tinyos-2.0.2/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.0.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c19f76738" loc="45:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c19f76738"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6c19f76968" loc="45:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19f76968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b6c19f6f290" loc="98:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19f76968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c19f72418" loc="67:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b6c19f70920" loc="92:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19f76968"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19f76968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6c19f70380" loc="92:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19f76968"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b6c19f706a0" loc="92:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19f76968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b6c19f72b88" loc="77:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b6c19f6fa10" loc="105:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19f76968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c19f734a8" loc="55:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19f76968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6c19f73238" loc="55:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19f76968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c19f73c78" loc="62:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.0.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b6c19fa1a48" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c64450"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b6c19c64858"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b6c19f9de18" loc="44:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c72848"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b6c19c72c50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b6c19f9ec70" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c68128"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b6c19c68530"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b6c19f9d678" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c68128"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b6c19c68530"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b6c19f9d408" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c68128"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b6c19c68530"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b6c19f9b828" loc="45:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c72848"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b6c19c72c50"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b6c19f9b5b8" loc="45:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c72848"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b6c19c72c50"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b6c19f9e4c8" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c64450"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b6c19c64858"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6c19f9e258" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c64450"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b6c19c64858"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b6c19fbe998" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b6c19fbc1d8" loc="44:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b6c19fbe290" loc="32:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b6c19fbc988" loc="50:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b6c19fa70d8" loc="21:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c6c9b8"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b6c19c6cdc0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b6c19fa7a88" loc="27:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c6c9b8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b6c19c6cdc0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b6c19fa7818" loc="27:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c6c9b8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b6c19c6cdc0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b6c19fb1020" loc="32:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19fb1020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b6c19fad738" loc="65:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c19fb09d0" loc="49:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c19fb18d8" loc="39:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19fb1020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b6c19faf110" loc="53:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b6c19fac020" loc="71:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c19fb0290" loc="45:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19fb1020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b6c19fb0020" loc="45:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c19fb1020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c19faf808" loc="56:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c19fad020" loc="59:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b6c19f94418" loc="46:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c19f94418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b6c19f8f900" loc="89:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b6c19f90a40" loc="78:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c19f94cb8" loc="52:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c19f94418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b6c19fa5290" loc="95:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b6c19fa5020" loc="95:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b6c19fa5a10" loc="101:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b6c19f914c0" loc="66:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b6c19f93d50" loc="61:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b6c19f8f1d8" loc="84:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c19f93630" loc="58:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c19f94418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b6c19f933c0" loc="58:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c19f94418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c19f91bb8" loc="69:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c19f90328" loc="72:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.0.2/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="payloadLength" ref="0x2b6c1a108b80" loc="89:/opt/tinyos-2.0.2/tos/interfaces/Receive.nc">
        <documentation loc="81:/opt/tinyos-2.0.2/tos/interfaces/Receive.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This call is identical&#10; to &#60;TT>Packet.payloadLength&#60;/TT>, and is included in Receive as a&#10; convenience.&#10;&#10; @param  msg      the packet&#10; @return          the length of the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a108910" loc="89:/opt/tinyos-2.0.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x2b6c1a10bd00" loc="67:/opt/tinyos-2.0.2/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.0.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
              <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a10b400" loc="67:/opt/tinyos-2.0.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b6c1a10b728" loc="67:/opt/tinyos-2.0.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c1a10ba38" loc="67:/opt/tinyos-2.0.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b6c1a108020" loc="79:/opt/tinyos-2.0.2/tos/interfaces/Receive.nc">
        <documentation loc="69:/opt/tinyos-2.0.2/tos/interfaces/Receive.nc">
          <short>&#10; Return point to a protocol's payload region in a packet.</short>
          <long>&#10; Return point to a protocol's payload region in a packet.  If len&#10; is not NULL, getPayload will return the length of the payload in&#10; it. This call is identical to &#60;TT>Packet.getPayload&#60;/TT>, and is&#10; included in Receive as a convenience.&#10;&#10; @param  msg      the packet&#10; @param  len      a pointer to where to store the payload length&#10; @return          a pointer to the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a1098b8" loc="79:/opt/tinyos-2.0.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c1a109c00" loc="79:/opt/tinyos-2.0.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.0.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b6c1a122cc8" loc="48:/opt/tinyos-2.0.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.0.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a122a58" loc="48:/opt/tinyos-2.0.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b6c1a11f9f8" loc="60:/opt/tinyos-2.0.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.0.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a11f788" loc="60:/opt/tinyos-2.0.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b6c1a11e5b8" loc="74:/opt/tinyos-2.0.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.0.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a11e348" loc="74:/opt/tinyos-2.0.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2b6c1a127a68" loc="95:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a1277f8" loc="95:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2b6c1a1284e8" loc="81:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a128278" loc="81:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2b6c1a129020" loc="66:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b6c1a12bc50" loc="66:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2b6c1a12b420" loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b6c1a12b1b0" loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2b6c1a1299d8" loc="73:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2b6c1a129768" loc="73:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2b6c1a127020" loc="88:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a128d48" loc="88:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2b6c1a12f5c8" loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6c1a12f020" loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2b6c1a12f348" loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2b6c1a12e0a8" loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b6c193fb160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6c1a12fdb8" loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2b6c1a131868" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6c1a1315f8" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2b6c1a12eb48" loc="72:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6c1a12e8d8" loc="72:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b6c1a13d6f8" loc="63:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
        <documentation loc="60:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a13d488" loc="63:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b6c1a140480" loc="46:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param msg&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a125e70" loc="46:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b6c1a140200" loc="46:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b6c1a13fcd8" loc="58:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a13fa68" loc="58:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b6c1a13f2a0" loc="53:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a140c58" loc="53:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b6c1a13f020" loc="53:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b6c1a13c108" loc="68:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
        <documentation loc="65:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a13de50" loc="68:/opt/tinyos-2.0.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b6c1a14fb80" loc="64:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a14f5f0" loc="64:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c1a14f900" loc="64:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b6c1a14bdd8" loc="114:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a14bb30" loc="114:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b6c1a14b328" loc="101:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b6c1a14eb50" loc="78:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a14e8e0" loc="78:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b6c1a14da00" loc="89:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a14d458" loc="89:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b6c1a14d780" loc="89:/opt/tinyos-2.0.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2b6c1a15de30" loc="90:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="84:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2b6c1a15d878" loc="90:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2b6c1a15dbb0" loc="90:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b6c1a15d178" loc="82:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="79:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b6c1a15e950" loc="77:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param on TRUE to turn address recognition on, FALSE to turn it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b6c1a15e6e0" loc="77:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b6c1a144cc8" loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b6c1a144a58" loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2b6c1a161e08" loc="65:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b6c1a161b98" loc="65:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b6c1a143d00" loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b6c1a143a90" loc="59:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2b6c1a15a020" loc="101:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="98:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2b6c1a15e020" loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b6c1a15fc18" loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2b6c1a15c6e0" loc="96:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="92:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2b6c1a161498" loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b6c1a144328" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b6c1a1433e0" loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2b6c1a15f568" loc="70:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x2b6c1a1472c8" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2b6c19e99e10"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2b6c19e9f438"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a147020" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2b6c1a147d68" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2b6c19e9fed8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2b6c19e9c438"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b6c1a147ac0" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="36:/opt/tinyos-2.0.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b6c1a157648" loc="48:/opt/tinyos-2.0.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="45:/opt/tinyos-2.0.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b6c19ece020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b6c1a1564d0" loc="58:/opt/tinyos-2.0.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="55:/opt/tinyos-2.0.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b6c1a157da8" loc="53:/opt/tinyos-2.0.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="50:/opt/tinyos-2.0.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b6c19ecfbb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b6c1a145e38" loc="43:/opt/tinyos-2.0.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="38:/opt/tinyos-2.0.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b6c19ecfbb8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c19ece020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b6c1a145880" loc="43:/opt/tinyos-2.0.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b6c19ecfbb8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b6c1a145bb8" loc="43:/opt/tinyos-2.0.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b6c19ece020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b6c1a1c8970" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6c1a1c83d8" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2b6c1a1c86f0" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b6c1a1c6b80" loc="65:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2b6c1a1c49b0" loc="84:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b6c1a1c40c8" loc="84:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b6c1a1c4410" loc="84:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c1a1c4720" loc="84:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b6c1a1c5908" loc="73:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b6c1a1c5360" loc="73:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b6c1a1c5688" loc="73:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2b6c1a1c63b8" loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2b6c1a1c6148" loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.0.2/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b6c1a1e1bb8" loc="41:/opt/tinyos-2.0.2/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.0.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b6c1a1e1420" loc="35:/opt/tinyos-2.0.2/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.0.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c193fddb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.0.2/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.0.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b6c1a1ca4d0" loc="74:/opt/tinyos-2.0.2/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.0.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c1a1cac70" loc="84:/opt/tinyos-2.0.2/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.0.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2b6c1a1cf4f8" loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2b6c1a1cc3e0" loc="97:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2b6c1a1cdc50" loc="90:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2b6c1a1b7d70" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2b6c1a1d0cd8" loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2b6c1a1cfd00" loc="76:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2b6c1a1cd4f0" loc="83:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2b6c1a1d0590" loc="56:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.0.2/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.0.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b6c1a1b3838" loc="110:/opt/tinyos-2.0.2/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.0.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b6c1a1b4910" loc="87:/opt/tinyos-2.0.2/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.0.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b6c1a1b4020" loc="78:/opt/tinyos-2.0.2/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.0.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b6c1a1b30d8" loc="92:/opt/tinyos-2.0.2/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.0.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b6c1a1b2258" loc="118:/opt/tinyos-2.0.2/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.0.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b6c1a1d7178" loc="71:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b6c1a1d9798" loc="56:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b6c1a1d89b0" loc="66:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b6c1a1d8740" loc="66:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b6c1a1d8020" loc="61:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b6c1a1db4d0" loc="45:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b6c1a1db260" loc="45:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b6c1a1d9020" loc="51:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b6c1a1dbc88" loc="51:/opt/tinyos-2.0.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.0.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.0.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b6c1a22a020" loc="49:/opt/tinyos-2.0.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b6c1a22a020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b6c1a22a858" loc="55:/opt/tinyos-2.0.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.0.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b6c1a2295a0" loc="63:/opt/tinyos-2.0.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.0.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b6c1a22a020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b6c1a229020" loc="63:/opt/tinyos-2.0.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b6c1a229320" loc="63:/opt/tinyos-2.0.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b6c1a22a020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b6c1a253638" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6c19e99968"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c1a2533c8" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b6c1a251108" loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6c19e99968"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c1a253e20" loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2b6c1a24fc30" loc="45:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6c19e99968"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b6c1a256938" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6c19e99968"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b6c1a256020" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b6c1a256378" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6c1a2566a8" loc="52:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b6c1a255ae0" loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6c19e99968"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b6c1a2551c8" loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b6c1a255520" loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6c1a255850" loc="63:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.0.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b6c1a25aa78" loc="57:/opt/tinyos-2.0.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.0.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b6c1a25a328" loc="50:/opt/tinyos-2.0.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.0.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b6c1a238ba8" loc="43:/opt/tinyos-2.0.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b6c1a238360" loc="42:/opt/tinyos-2.0.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.0.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b6c1a2f7e28" loc="49:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c8f020"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b6c19c8f428"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2b6c1a2f9a18" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c7c918"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b6c19c7cd20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6c1a2f97a8" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c7c918"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b6c19c7cd20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b6c1a2f8c88" loc="45:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c87b60"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b6c19c91020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2b6c1a2fc610" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c77528"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b6c19c77930"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b6c1a2f7680" loc="46:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c87b60"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b6c19c91020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b6c1a2f7410" loc="46:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c87b60"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b6c19c91020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b6c1a2f6830" loc="50:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c8f020"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b6c19c8f428"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b6c1a2f65c0" loc="50:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c8f020"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b6c19c8f428"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2b6c1a2fb5e8" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c85d50"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b6c19c84188"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2b6c1a2fce10" loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c7c918"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b6c19c7cd20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2b6c1a2f9020" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c77528"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b6c19c77930"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6c1a2fbd70" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c77528"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b6c19c77930"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2b6c1a2f84d8" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c85d50"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b6c19c84188"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6c1a2f8268" loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c19c85d50"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b6c19c84188"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b6c1a2fd6a8" loc="31:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c1a2fd6a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b6c1a2ed108" loc="79:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b6c1a2eee48" loc="79:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b6c1a2ee020" loc="67:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c1a2f2020" loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c1a2fd6a8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b6c1a2f1338" loc="51:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c1a2fd6a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b6c1a2f10c8" loc="51:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c1a2fd6a8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b6c1a2f1a78" loc="55:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b6c1a2ee770" loc="73:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c1a2f2958" loc="44:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c1a2fd6a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b6c1a2f26e8" loc="44:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c1a2fd6a8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c1a2f01d8" loc="58:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c1a2f08c0" loc="61:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.0.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.0.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b6c1a4acb10" loc="43:/opt/tinyos-2.0.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b6c1a4abbf0" loc="55:/opt/tinyos-2.0.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.0.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b6c1a4ab4b8" loc="50:/opt/tinyos-2.0.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.0.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b6c1a4ab248" loc="50:/opt/tinyos-2.0.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b6c1a4ac328" loc="42:/opt/tinyos-2.0.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.0.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b6c1a4b74e0" loc="45:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c1a4b6dd0" loc="64:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b6c1a4b8db8" loc="40:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b6c1a4b6618" loc="59:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b6c1a4b63a8" loc="59:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b6c1a4b86c0" loc="35:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b6c1a4b7c20" loc="52:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b6c1a4c6110" loc="41:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.0.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2b6c1a53a830" loc="24:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2b6c1a539070" loc="31:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2b6c1a539840" loc="39:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2b6c1a5585d0" loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c1a558020" loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6c1a558350" loc="62:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b6c1a554700" loc="91:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c1a555de8" loc="91:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6c1a554148" loc="91:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b6c1a554470" loc="91:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b6c1a5555d0" loc="82:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6c19e99968"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c1a555020" loc="82:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6c1a555350" loc="82:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2b6c1a5596b0" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b6c19e99968"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c1a559100" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6c1a559430" loc="51:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b6c1a557738" loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c1a558e10" loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b6c1a557180" loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b6c1a5574a8" loc="71:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.0.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.0.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b6c1a56b930" loc="59:/opt/tinyos-2.0.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.0.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b6c1a56b020" loc="59:/opt/tinyos-2.0.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b6c1a56b380" loc="59:/opt/tinyos-2.0.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c1a56b6a0" loc="59:/opt/tinyos-2.0.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b6c1a568020" loc="71:/opt/tinyos-2.0.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.0.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b6c1a56a2b0" loc="71:/opt/tinyos-2.0.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b6c1a56a610" loc="71:/opt/tinyos-2.0.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b6c1a56a930" loc="71:/opt/tinyos-2.0.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b6c1a56ac78" loc="72:/opt/tinyos-2.0.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.0.2/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b6c1a56f910" loc="34:/opt/tinyos-2.0.2/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.0.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b6c1a56f6a0" loc="34:/opt/tinyos-2.0.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b6c1a5f6020" loc="69:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b6c1a61fa60" loc="109:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b6c1a623538" loc="100:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b6c1a61e458" loc="111:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b6c1a61e1e8" loc="111:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b6c1a5f87d8" loc="66:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b6c1a621108" loc="105:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b6c1a622e18" loc="105:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b6c1a626d50" loc="96:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b6c1a626ae0" loc="96:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b6c1a627020" loc="80:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b6c1a61ab98" loc="125:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b6c1a61a928" loc="125:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b6c1a6244d0" loc="97:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b6c1a61d4b0" loc="114:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b6c1a61d240" loc="114:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b6c1a61b360" loc="120:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b6c1a61f338" loc="108:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b6c1a61f0c8" loc="108:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b6c1a61a258" loc="124:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b6c1a622020" loc="102:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b6c1a623c18" loc="102:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b6c1a627978" loc="86:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c1a627708" loc="86:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b6c1a624de0" loc="99:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b6c1a624b70" loc="99:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b6c1a621918" loc="106:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b6c1a61eb60" loc="112:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b6c1a61dba0" loc="115:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b6c1a61baa8" loc="122:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b6c1a622738" loc="103:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b6c1a5f6738" loc="72:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b6c1a626338" loc="92:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c1a6260c8" loc="92:/opt/tinyos-2.0.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.0.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.0.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b6c1a6179f0" loc="80:/opt/tinyos-2.0.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.0.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b6c1a613258" loc="88:/opt/tinyos-2.0.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.0.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.0.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.0.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b6c1a662548" loc="74:/opt/tinyos-2.0.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.0.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c1a662d20" loc="84:/opt/tinyos-2.0.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.0.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.0.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b6c1a6ac020" loc="43:/opt/tinyos-2.0.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.0.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b6c1a6ac8e8" loc="51:/opt/tinyos-2.0.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.0.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.0.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.0.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b6c1a6a87d0" loc="55:/opt/tinyos-2.0.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.0.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b6c1a6a8020" loc="49:/opt/tinyos-2.0.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.0.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.0.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b6c1a6d2108" loc="69:/opt/tinyos-2.0.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.0.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b6c1a6a9818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b6c1a6d3e18" loc="69:/opt/tinyos-2.0.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b6c1a6a9818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b6c1a6d5290" loc="43:/opt/tinyos-2.0.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.0.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b6c1a6d5d10" loc="52:/opt/tinyos-2.0.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.0.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b6c1a6a9818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b6c1a6d5aa0" loc="52:/opt/tinyos-2.0.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b6c1a6a9818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b6c1a6d35e0" loc="60:/opt/tinyos-2.0.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.0.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b6c1a6a9818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2b6c1a796900" loc="43:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c19be5448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos-2.0.2/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="22:/opt/tinyos-2.0.2/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x2b6c1a794840" loc="39:/opt/tinyos-2.0.2/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos-2.0.2/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.</short>
          <long> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b6c1a794248" loc="39:/opt/tinyos-2.0.2/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x2b6c1a7945c0" loc="39:/opt/tinyos-2.0.2/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x2b6c1a7932d0" loc="50:/opt/tinyos-2.0.2/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos-2.0.2/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.</short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b6c1a793060" loc="50:/opt/tinyos-2.0.2/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b6c1a7cbd68" loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2b6c1a7cb760" loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c193fb910"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b6c1a7cbae8" loc="61:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b6c19eeeac8"/>
                <typename><typedef-ref name="message_t" ref="0x2b6c19eeb088"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2b6c1a7cb020" loc="53:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2b6c1a7cc808" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b6c1a7cc598" loc="47:/opt/tinyos-2.0.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c193fd378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.0.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.0.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b6c1a910bb8" loc="42:/opt/tinyos-2.0.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b6c1a910bb8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b6c1a90d6b8" loc="53:/opt/tinyos-2.0.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.0.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c19befa98"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b6c1a910bb8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b6c1a90d448" loc="53:/opt/tinyos-2.0.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b6c1a910bb8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
